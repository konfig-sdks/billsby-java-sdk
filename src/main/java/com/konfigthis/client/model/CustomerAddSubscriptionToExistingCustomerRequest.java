/*
 * Billsby API
 * Billsby is a feature-rich \"Saas\" recurring payment platform, ranked as the leading subscription billing software by G2.  Billsby is designed to ensure customers can go live quickly, often within 1-2 hours.  To help facilitate this process we have a team of friendly knowledgeable advisors ready to help your business go live.      Billsby specializes in providing great customer service at an affordable price point - our technology is rated No 1 on G2 by our customers.  If you are a developer creating a solution for your customer, Billsby has a friendly well-documented API.  The Billsby team are here to provide support to developers in order to ensure a smooth migration or new system build.   Why not book a call, talk through your Billing requirements and we can let you know how we can help you transform your business..
 *
 * The version of the OpenAPI document: 1.3.5
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CustomerAddSubscriptionToExistingCustomerRequestAddOnsInner;
import com.konfigthis.client.model.CustomerAddSubscriptionToExistingCustomerRequestAddress;
import com.konfigthis.client.model.CustomerAddSubscriptionToExistingCustomerRequestCouponCodesInner;
import com.konfigthis.client.model.CustomerAddSubscriptionToExistingCustomerRequestCustomFieldResponseInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * CustomerAddSubscriptionToExistingCustomerRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class CustomerAddSubscriptionToExistingCustomerRequest {
  public static final String SERIALIZED_NAME_CYCLE_ID = "cycleId";
  @SerializedName(SERIALIZED_NAME_CYCLE_ID)
  private Integer cycleId;

  public static final String SERIALIZED_NAME_UNITS = "units";
  @SerializedName(SERIALIZED_NAME_UNITS)
  private Integer units;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private CustomerAddSubscriptionToExistingCustomerRequestAddress address;

  public static final String SERIALIZED_NAME_SHIPPING_ADDRESS = "shippingAddress";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ADDRESS)
  private Object shippingAddress;

  public static final String SERIALIZED_NAME_ADDITIONAL_EMAIL = "additionalEmail";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_EMAIL)
  private String additionalEmail;

  public static final String SERIALIZED_NAME_PHONE_NUMBER_DIAL_COUNTRY = "phoneNumberDialCountry";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER_DIAL_COUNTRY)
  private String phoneNumberDialCountry;

  public static final String SERIALIZED_NAME_PHONE_NUMBER_DIAL_CODE = "phoneNumberDialCode";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER_DIAL_CODE)
  private Integer phoneNumberDialCode;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phoneNumber";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private Integer phoneNumber;

  public static final String SERIALIZED_NAME_MARKETING_CONSENT = "marketingConsent";
  @SerializedName(SERIALIZED_NAME_MARKETING_CONSENT)
  private Boolean marketingConsent;

  public static final String SERIALIZED_NAME_TAX_REG_NUMBER = "taxRegNumber";
  @SerializedName(SERIALIZED_NAME_TAX_REG_NUMBER)
  private String taxRegNumber;

  public static final String SERIALIZED_NAME_IP_ADDRESS = "ipAddress";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESS)
  private String ipAddress;

  public static final String SERIALIZED_NAME_CUSTOM_FIELD_RESPONSE = "customFieldResponse";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELD_RESPONSE)
  private List<CustomerAddSubscriptionToExistingCustomerRequestCustomFieldResponseInner> customFieldResponse = null;

  public static final String SERIALIZED_NAME_ADD_ONS = "addOns";
  @SerializedName(SERIALIZED_NAME_ADD_ONS)
  private List<CustomerAddSubscriptionToExistingCustomerRequestAddOnsInner> addOns = null;

  public static final String SERIALIZED_NAME_ALLOWANCES = "allowances";
  @SerializedName(SERIALIZED_NAME_ALLOWANCES)
  private Integer allowances;

  public static final String SERIALIZED_NAME_COUPON_CODES = "couponCodes";
  @SerializedName(SERIALIZED_NAME_COUPON_CODES)
  private List<CustomerAddSubscriptionToExistingCustomerRequestCouponCodesInner> couponCodes = null;

  public CustomerAddSubscriptionToExistingCustomerRequest() {
  }

  public CustomerAddSubscriptionToExistingCustomerRequest cycleId(Integer cycleId) {
    
    
    
    
    this.cycleId = cycleId;
    return this;
  }

   /**
   * The unique identifier of the cycle in the Billsby platform
   * @return cycleId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The unique identifier of the cycle in the Billsby platform")

  public Integer getCycleId() {
    return cycleId;
  }


  public void setCycleId(Integer cycleId) {
    
    
    
    this.cycleId = cycleId;
  }


  public CustomerAddSubscriptionToExistingCustomerRequest units(Integer units) {
    
    
    
    
    this.units = units;
    return this;
  }

   /**
   * The number of units for unit based plans
   * @return units
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of units for unit based plans")

  public Integer getUnits() {
    return units;
  }


  public void setUnits(Integer units) {
    
    
    
    this.units = units;
  }


  public CustomerAddSubscriptionToExistingCustomerRequest address(CustomerAddSubscriptionToExistingCustomerRequestAddress address) {
    
    
    
    
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CustomerAddSubscriptionToExistingCustomerRequestAddress getAddress() {
    return address;
  }


  public void setAddress(CustomerAddSubscriptionToExistingCustomerRequestAddress address) {
    
    
    
    this.address = address;
  }


  public CustomerAddSubscriptionToExistingCustomerRequest shippingAddress(Object shippingAddress) {
    
    
    
    
    this.shippingAddress = shippingAddress;
    return this;
  }

   /**
   * The shipping address of the customer
   * @return shippingAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The shipping address of the customer")

  public Object getShippingAddress() {
    return shippingAddress;
  }


  public void setShippingAddress(Object shippingAddress) {
    
    
    
    this.shippingAddress = shippingAddress;
  }


  public CustomerAddSubscriptionToExistingCustomerRequest additionalEmail(String additionalEmail) {
    
    
    
    
    this.additionalEmail = additionalEmail;
    return this;
  }

   /**
   * Any additional email addresses given by the customer
   * @return additionalEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Any additional email addresses given by the customer")

  public String getAdditionalEmail() {
    return additionalEmail;
  }


  public void setAdditionalEmail(String additionalEmail) {
    
    
    
    this.additionalEmail = additionalEmail;
  }


  public CustomerAddSubscriptionToExistingCustomerRequest phoneNumberDialCountry(String phoneNumberDialCountry) {
    
    
    
    
    this.phoneNumberDialCountry = phoneNumberDialCountry;
    return this;
  }

   /**
   * The country associated with the phone number
   * @return phoneNumberDialCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The country associated with the phone number")

  public String getPhoneNumberDialCountry() {
    return phoneNumberDialCountry;
  }


  public void setPhoneNumberDialCountry(String phoneNumberDialCountry) {
    
    
    
    this.phoneNumberDialCountry = phoneNumberDialCountry;
  }


  public CustomerAddSubscriptionToExistingCustomerRequest phoneNumberDialCode(Integer phoneNumberDialCode) {
    
    
    
    
    this.phoneNumberDialCode = phoneNumberDialCode;
    return this;
  }

   /**
   * The country dial code for the customer phone number
   * @return phoneNumberDialCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The country dial code for the customer phone number")

  public Integer getPhoneNumberDialCode() {
    return phoneNumberDialCode;
  }


  public void setPhoneNumberDialCode(Integer phoneNumberDialCode) {
    
    
    
    this.phoneNumberDialCode = phoneNumberDialCode;
  }


  public CustomerAddSubscriptionToExistingCustomerRequest phoneNumber(Integer phoneNumber) {
    
    
    
    
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * The customer&#39;s phone number
   * @return phoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The customer's phone number")

  public Integer getPhoneNumber() {
    return phoneNumber;
  }


  public void setPhoneNumber(Integer phoneNumber) {
    
    
    
    this.phoneNumber = phoneNumber;
  }


  public CustomerAddSubscriptionToExistingCustomerRequest marketingConsent(Boolean marketingConsent) {
    
    
    
    
    this.marketingConsent = marketingConsent;
    return this;
  }

   /**
   * Gas the customer given marketing consent: true or false
   * @return marketingConsent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Gas the customer given marketing consent: true or false")

  public Boolean getMarketingConsent() {
    return marketingConsent;
  }


  public void setMarketingConsent(Boolean marketingConsent) {
    
    
    
    this.marketingConsent = marketingConsent;
  }


  public CustomerAddSubscriptionToExistingCustomerRequest taxRegNumber(String taxRegNumber) {
    
    
    
    
    this.taxRegNumber = taxRegNumber;
    return this;
  }

   /**
   * Tax registration number
   * @return taxRegNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tax registration number")

  public String getTaxRegNumber() {
    return taxRegNumber;
  }


  public void setTaxRegNumber(String taxRegNumber) {
    
    
    
    this.taxRegNumber = taxRegNumber;
  }


  public CustomerAddSubscriptionToExistingCustomerRequest ipAddress(String ipAddress) {
    
    
    
    
    this.ipAddress = ipAddress;
    return this;
  }

   /**
   * Get ipAddress
   * @return ipAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIpAddress() {
    return ipAddress;
  }


  public void setIpAddress(String ipAddress) {
    
    
    
    this.ipAddress = ipAddress;
  }


  public CustomerAddSubscriptionToExistingCustomerRequest customFieldResponse(List<CustomerAddSubscriptionToExistingCustomerRequestCustomFieldResponseInner> customFieldResponse) {
    
    
    
    
    this.customFieldResponse = customFieldResponse;
    return this;
  }

  public CustomerAddSubscriptionToExistingCustomerRequest addCustomFieldResponseItem(CustomerAddSubscriptionToExistingCustomerRequestCustomFieldResponseInner customFieldResponseItem) {
    if (this.customFieldResponse == null) {
      this.customFieldResponse = new ArrayList<>();
    }
    this.customFieldResponse.add(customFieldResponseItem);
    return this;
  }

   /**
   * Any responses to custom fields
   * @return customFieldResponse
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Any responses to custom fields")

  public List<CustomerAddSubscriptionToExistingCustomerRequestCustomFieldResponseInner> getCustomFieldResponse() {
    return customFieldResponse;
  }


  public void setCustomFieldResponse(List<CustomerAddSubscriptionToExistingCustomerRequestCustomFieldResponseInner> customFieldResponse) {
    
    
    
    this.customFieldResponse = customFieldResponse;
  }


  public CustomerAddSubscriptionToExistingCustomerRequest addOns(List<CustomerAddSubscriptionToExistingCustomerRequestAddOnsInner> addOns) {
    
    
    
    
    this.addOns = addOns;
    return this;
  }

  public CustomerAddSubscriptionToExistingCustomerRequest addAddOnsItem(CustomerAddSubscriptionToExistingCustomerRequestAddOnsInner addOnsItem) {
    if (this.addOns == null) {
      this.addOns = new ArrayList<>();
    }
    this.addOns.add(addOnsItem);
    return this;
  }

   /**
   * Any add-ons to be included in the plan, along with the quantity of each add-on if unit based
   * @return addOns
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Any add-ons to be included in the plan, along with the quantity of each add-on if unit based")

  public List<CustomerAddSubscriptionToExistingCustomerRequestAddOnsInner> getAddOns() {
    return addOns;
  }


  public void setAddOns(List<CustomerAddSubscriptionToExistingCustomerRequestAddOnsInner> addOns) {
    
    
    
    this.addOns = addOns;
  }


  public CustomerAddSubscriptionToExistingCustomerRequest allowances(Integer allowances) {
    
    
    
    
    this.allowances = allowances;
    return this;
  }

   /**
   * Any allowances to be included with the plan
   * @return allowances
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Any allowances to be included with the plan")

  public Integer getAllowances() {
    return allowances;
  }


  public void setAllowances(Integer allowances) {
    
    
    
    this.allowances = allowances;
  }


  public CustomerAddSubscriptionToExistingCustomerRequest couponCodes(List<CustomerAddSubscriptionToExistingCustomerRequestCouponCodesInner> couponCodes) {
    
    
    
    
    this.couponCodes = couponCodes;
    return this;
  }

  public CustomerAddSubscriptionToExistingCustomerRequest addCouponCodesItem(CustomerAddSubscriptionToExistingCustomerRequestCouponCodesInner couponCodesItem) {
    if (this.couponCodes == null) {
      this.couponCodes = new ArrayList<>();
    }
    this.couponCodes.add(couponCodesItem);
    return this;
  }

   /**
   * The coupon code to be used for the plan
   * @return couponCodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The coupon code to be used for the plan")

  public List<CustomerAddSubscriptionToExistingCustomerRequestCouponCodesInner> getCouponCodes() {
    return couponCodes;
  }


  public void setCouponCodes(List<CustomerAddSubscriptionToExistingCustomerRequestCouponCodesInner> couponCodes) {
    
    
    
    this.couponCodes = couponCodes;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CustomerAddSubscriptionToExistingCustomerRequest instance itself
   */
  public CustomerAddSubscriptionToExistingCustomerRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerAddSubscriptionToExistingCustomerRequest customerAddSubscriptionToExistingCustomerRequest = (CustomerAddSubscriptionToExistingCustomerRequest) o;
    return Objects.equals(this.cycleId, customerAddSubscriptionToExistingCustomerRequest.cycleId) &&
        Objects.equals(this.units, customerAddSubscriptionToExistingCustomerRequest.units) &&
        Objects.equals(this.address, customerAddSubscriptionToExistingCustomerRequest.address) &&
        Objects.equals(this.shippingAddress, customerAddSubscriptionToExistingCustomerRequest.shippingAddress) &&
        Objects.equals(this.additionalEmail, customerAddSubscriptionToExistingCustomerRequest.additionalEmail) &&
        Objects.equals(this.phoneNumberDialCountry, customerAddSubscriptionToExistingCustomerRequest.phoneNumberDialCountry) &&
        Objects.equals(this.phoneNumberDialCode, customerAddSubscriptionToExistingCustomerRequest.phoneNumberDialCode) &&
        Objects.equals(this.phoneNumber, customerAddSubscriptionToExistingCustomerRequest.phoneNumber) &&
        Objects.equals(this.marketingConsent, customerAddSubscriptionToExistingCustomerRequest.marketingConsent) &&
        Objects.equals(this.taxRegNumber, customerAddSubscriptionToExistingCustomerRequest.taxRegNumber) &&
        Objects.equals(this.ipAddress, customerAddSubscriptionToExistingCustomerRequest.ipAddress) &&
        Objects.equals(this.customFieldResponse, customerAddSubscriptionToExistingCustomerRequest.customFieldResponse) &&
        Objects.equals(this.addOns, customerAddSubscriptionToExistingCustomerRequest.addOns) &&
        Objects.equals(this.allowances, customerAddSubscriptionToExistingCustomerRequest.allowances) &&
        Objects.equals(this.couponCodes, customerAddSubscriptionToExistingCustomerRequest.couponCodes)&&
        Objects.equals(this.additionalProperties, customerAddSubscriptionToExistingCustomerRequest.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cycleId, units, address, shippingAddress, additionalEmail, phoneNumberDialCountry, phoneNumberDialCode, phoneNumber, marketingConsent, taxRegNumber, ipAddress, customFieldResponse, addOns, allowances, couponCodes, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerAddSubscriptionToExistingCustomerRequest {\n");
    sb.append("    cycleId: ").append(toIndentedString(cycleId)).append("\n");
    sb.append("    units: ").append(toIndentedString(units)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    shippingAddress: ").append(toIndentedString(shippingAddress)).append("\n");
    sb.append("    additionalEmail: ").append(toIndentedString(additionalEmail)).append("\n");
    sb.append("    phoneNumberDialCountry: ").append(toIndentedString(phoneNumberDialCountry)).append("\n");
    sb.append("    phoneNumberDialCode: ").append(toIndentedString(phoneNumberDialCode)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    marketingConsent: ").append(toIndentedString(marketingConsent)).append("\n");
    sb.append("    taxRegNumber: ").append(toIndentedString(taxRegNumber)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    customFieldResponse: ").append(toIndentedString(customFieldResponse)).append("\n");
    sb.append("    addOns: ").append(toIndentedString(addOns)).append("\n");
    sb.append("    allowances: ").append(toIndentedString(allowances)).append("\n");
    sb.append("    couponCodes: ").append(toIndentedString(couponCodes)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cycleId");
    openapiFields.add("units");
    openapiFields.add("address");
    openapiFields.add("shippingAddress");
    openapiFields.add("additionalEmail");
    openapiFields.add("phoneNumberDialCountry");
    openapiFields.add("phoneNumberDialCode");
    openapiFields.add("phoneNumber");
    openapiFields.add("marketingConsent");
    openapiFields.add("taxRegNumber");
    openapiFields.add("ipAddress");
    openapiFields.add("customFieldResponse");
    openapiFields.add("addOns");
    openapiFields.add("allowances");
    openapiFields.add("couponCodes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("cycleId");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomerAddSubscriptionToExistingCustomerRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CustomerAddSubscriptionToExistingCustomerRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomerAddSubscriptionToExistingCustomerRequest is not found in the empty JSON string", CustomerAddSubscriptionToExistingCustomerRequest.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CustomerAddSubscriptionToExistingCustomerRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the optional field `address`
      if (jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) {
        CustomerAddSubscriptionToExistingCustomerRequestAddress.validateJsonObject(jsonObj.getAsJsonObject("address"));
      }
      if ((jsonObj.get("additionalEmail") != null && !jsonObj.get("additionalEmail").isJsonNull()) && !jsonObj.get("additionalEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `additionalEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("additionalEmail").toString()));
      }
      if ((jsonObj.get("phoneNumberDialCountry") != null && !jsonObj.get("phoneNumberDialCountry").isJsonNull()) && !jsonObj.get("phoneNumberDialCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phoneNumberDialCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phoneNumberDialCountry").toString()));
      }
      if ((jsonObj.get("taxRegNumber") != null && !jsonObj.get("taxRegNumber").isJsonNull()) && !jsonObj.get("taxRegNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxRegNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxRegNumber").toString()));
      }
      if ((jsonObj.get("ipAddress") != null && !jsonObj.get("ipAddress").isJsonNull()) && !jsonObj.get("ipAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ipAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ipAddress").toString()));
      }
      if (jsonObj.get("customFieldResponse") != null && !jsonObj.get("customFieldResponse").isJsonNull()) {
        JsonArray jsonArraycustomFieldResponse = jsonObj.getAsJsonArray("customFieldResponse");
        if (jsonArraycustomFieldResponse != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customFieldResponse").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customFieldResponse` to be an array in the JSON string but got `%s`", jsonObj.get("customFieldResponse").toString()));
          }

          // validate the optional field `customFieldResponse` (array)
          for (int i = 0; i < jsonArraycustomFieldResponse.size(); i++) {
            CustomerAddSubscriptionToExistingCustomerRequestCustomFieldResponseInner.validateJsonObject(jsonArraycustomFieldResponse.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("addOns") != null && !jsonObj.get("addOns").isJsonNull()) {
        JsonArray jsonArrayaddOns = jsonObj.getAsJsonArray("addOns");
        if (jsonArrayaddOns != null) {
          // ensure the json data is an array
          if (!jsonObj.get("addOns").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `addOns` to be an array in the JSON string but got `%s`", jsonObj.get("addOns").toString()));
          }

          // validate the optional field `addOns` (array)
          for (int i = 0; i < jsonArrayaddOns.size(); i++) {
            CustomerAddSubscriptionToExistingCustomerRequestAddOnsInner.validateJsonObject(jsonArrayaddOns.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("couponCodes") != null && !jsonObj.get("couponCodes").isJsonNull()) {
        JsonArray jsonArraycouponCodes = jsonObj.getAsJsonArray("couponCodes");
        if (jsonArraycouponCodes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("couponCodes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `couponCodes` to be an array in the JSON string but got `%s`", jsonObj.get("couponCodes").toString()));
          }

          // validate the optional field `couponCodes` (array)
          for (int i = 0; i < jsonArraycouponCodes.size(); i++) {
            CustomerAddSubscriptionToExistingCustomerRequestCouponCodesInner.validateJsonObject(jsonArraycouponCodes.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomerAddSubscriptionToExistingCustomerRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomerAddSubscriptionToExistingCustomerRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomerAddSubscriptionToExistingCustomerRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomerAddSubscriptionToExistingCustomerRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomerAddSubscriptionToExistingCustomerRequest>() {
           @Override
           public void write(JsonWriter out, CustomerAddSubscriptionToExistingCustomerRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomerAddSubscriptionToExistingCustomerRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             CustomerAddSubscriptionToExistingCustomerRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomerAddSubscriptionToExistingCustomerRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomerAddSubscriptionToExistingCustomerRequest
  * @throws IOException if the JSON string is invalid with respect to CustomerAddSubscriptionToExistingCustomerRequest
  */
  public static CustomerAddSubscriptionToExistingCustomerRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomerAddSubscriptionToExistingCustomerRequest.class);
  }

 /**
  * Convert an instance of CustomerAddSubscriptionToExistingCustomerRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

