/*
 * Billsby API
 * Billsby is a feature-rich \"Saas\" recurring payment platform, ranked as the leading subscription billing software by G2.  Billsby is designed to ensure customers can go live quickly, often within 1-2 hours.  To help facilitate this process we have a team of friendly knowledgeable advisors ready to help your business go live.      Billsby specializes in providing great customer service at an affordable price point - our technology is rated No 1 on G2 by our customers.  If you are a developer creating a solution for your customer, Billsby has a friendly well-documented API.  The Billsby team are here to provide support to developers in order to ensure a smooth migration or new system build.   Why not book a call, talk through your Billing requirements and we can let you know how we can help you transform your business..
 *
 * The version of the OpenAPI document: 1.3.5
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.InvoiceDetailsResponseSubscriptionsInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * InvoiceDetailsResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class InvoiceDetailsResponse {
  public static final String SERIALIZED_NAME_INVOICE_ID = "invoiceId";
  @SerializedName(SERIALIZED_NAME_INVOICE_ID)
  private String invoiceId;

  public static final String SERIALIZED_NAME_CUSTOMER_EMAIL = "customerEmail";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_EMAIL)
  private String customerEmail;

  public static final String SERIALIZED_NAME_CUSTOMER_FIRST_NAME = "customerFirstName";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_FIRST_NAME)
  private String customerFirstName;

  public static final String SERIALIZED_NAME_CUSTOMER_LAST_NAME = "customerLastName";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_LAST_NAME)
  private String customerLastName;

  public static final String SERIALIZED_NAME_CUSTOMER_UNIQUE_ID = "customerUniqueId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_UNIQUE_ID)
  private String customerUniqueId;

  public static final String SERIALIZED_NAME_ADDRESS_LINE1 = "addressLine1";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE1)
  private String addressLine1;

  public static final String SERIALIZED_NAME_ADDRESS_LINE2 = "addressLine2";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE2)
  private String addressLine2;

  public static final String SERIALIZED_NAME_ADDRESS_POST_CODE = "addressPostCode";
  @SerializedName(SERIALIZED_NAME_ADDRESS_POST_CODE)
  private String addressPostCode;

  public static final String SERIALIZED_NAME_ADDRESS_CITY = "addressCity";
  @SerializedName(SERIALIZED_NAME_ADDRESS_CITY)
  private String addressCity;

  public static final String SERIALIZED_NAME_ADDRESS_STATE = "addressState";
  @SerializedName(SERIALIZED_NAME_ADDRESS_STATE)
  private String addressState;

  public static final String SERIALIZED_NAME_ADDRESS_COUNTRY = "addressCountry";
  @SerializedName(SERIALIZED_NAME_ADDRESS_COUNTRY)
  private String addressCountry;

  public static final String SERIALIZED_NAME_ADDRESS_COUNTRY_CODE = "addressCountryCode";
  @SerializedName(SERIALIZED_NAME_ADDRESS_COUNTRY_CODE)
  private String addressCountryCode;

  public static final String SERIALIZED_NAME_INVOICE_NUMBER = "invoiceNumber";
  @SerializedName(SERIALIZED_NAME_INVOICE_NUMBER)
  private String invoiceNumber;

  public static final String SERIALIZED_NAME_CREATED_ON = "createdOn";
  @SerializedName(SERIALIZED_NAME_CREATED_ON)
  private String createdOn;

  public static final String SERIALIZED_NAME_FORMATTED_AMOUNT = "formattedAmount";
  @SerializedName(SERIALIZED_NAME_FORMATTED_AMOUNT)
  private String formattedAmount;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private String amount;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_SUB_TOTAL = "subTotal";
  @SerializedName(SERIALIZED_NAME_SUB_TOTAL)
  private String subTotal;

  public static final String SERIALIZED_NAME_TAX_TOTAL = "taxTotal";
  @SerializedName(SERIALIZED_NAME_TAX_TOTAL)
  private String taxTotal;

  public static final String SERIALIZED_NAME_PRORATION_ADJUSTMENT = "prorationAdjustment";
  @SerializedName(SERIALIZED_NAME_PRORATION_ADJUSTMENT)
  private String prorationAdjustment;

  public static final String SERIALIZED_NAME_PRORATION_FACTOR = "prorationFactor";
  @SerializedName(SERIALIZED_NAME_PRORATION_FACTOR)
  private Object prorationFactor = null;

  public static final String SERIALIZED_NAME_TAXES = "taxes";
  @SerializedName(SERIALIZED_NAME_TAXES)
  private List<Object> taxes = null;

  public static final String SERIALIZED_NAME_INVOICE_TYPE = "invoiceType";
  @SerializedName(SERIALIZED_NAME_INVOICE_TYPE)
  private String invoiceType;

  public static final String SERIALIZED_NAME_SUBSCRIPTIONS = "subscriptions";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTIONS)
  private List<InvoiceDetailsResponseSubscriptionsInner> subscriptions = null;

  public static final String SERIALIZED_NAME_COMPANY_NAME = "companyName";
  @SerializedName(SERIALIZED_NAME_COMPANY_NAME)
  private String companyName;

  public static final String SERIALIZED_NAME_COMPANY_EMAIL = "companyEmail";
  @SerializedName(SERIALIZED_NAME_COMPANY_EMAIL)
  private String companyEmail;

  public static final String SERIALIZED_NAME_COMPANY_TAX_NUMBER = "companyTaxNumber";
  @SerializedName(SERIALIZED_NAME_COMPANY_TAX_NUMBER)
  private String companyTaxNumber;

  public static final String SERIALIZED_NAME_COMPANY_DOMAIN = "companyDomain";
  @SerializedName(SERIALIZED_NAME_COMPANY_DOMAIN)
  private String companyDomain;

  public static final String SERIALIZED_NAME_COMPANY_PHONE_NUMBER_DIAL_COUNTRY = "companyPhoneNumberDialCountry";
  @SerializedName(SERIALIZED_NAME_COMPANY_PHONE_NUMBER_DIAL_COUNTRY)
  private String companyPhoneNumberDialCountry;

  public static final String SERIALIZED_NAME_COMPANY_PHONE_NUMBER_DIAL_CODE = "companyPhoneNumberDialCode";
  @SerializedName(SERIALIZED_NAME_COMPANY_PHONE_NUMBER_DIAL_CODE)
  private String companyPhoneNumberDialCode;

  public static final String SERIALIZED_NAME_COMPANY_PHONE_NUMBER = "companyPhoneNumber";
  @SerializedName(SERIALIZED_NAME_COMPANY_PHONE_NUMBER)
  private String companyPhoneNumber;

  public static final String SERIALIZED_NAME_COMPANY_ADDRESS_LINE1 = "companyAddressLine1";
  @SerializedName(SERIALIZED_NAME_COMPANY_ADDRESS_LINE1)
  private String companyAddressLine1;

  public static final String SERIALIZED_NAME_COMPANY_ADDRESS_LINE2 = "companyAddressLine2";
  @SerializedName(SERIALIZED_NAME_COMPANY_ADDRESS_LINE2)
  private String companyAddressLine2;

  public static final String SERIALIZED_NAME_COMPANY_CITY = "companyCity";
  @SerializedName(SERIALIZED_NAME_COMPANY_CITY)
  private String companyCity;

  public static final String SERIALIZED_NAME_COMPANY_STATE = "companyState";
  @SerializedName(SERIALIZED_NAME_COMPANY_STATE)
  private String companyState;

  public static final String SERIALIZED_NAME_COMPANY_POST_CODE = "companyPostCode";
  @SerializedName(SERIALIZED_NAME_COMPANY_POST_CODE)
  private String companyPostCode;

  public static final String SERIALIZED_NAME_COMPANY_COUNTRY = "companyCountry";
  @SerializedName(SERIALIZED_NAME_COMPANY_COUNTRY)
  private String companyCountry;

  public static final String SERIALIZED_NAME_BRANDING_LOGO = "brandingLogo";
  @SerializedName(SERIALIZED_NAME_BRANDING_LOGO)
  private String brandingLogo;

  public static final String SERIALIZED_NAME_BRANDING_LOGO_BACKGROUND_COLOR = "brandingLogoBackgroundColor";
  @SerializedName(SERIALIZED_NAME_BRANDING_LOGO_BACKGROUND_COLOR)
  private String brandingLogoBackgroundColor;

  public static final String SERIALIZED_NAME_BRANDING_HIGHLIGHT_COLOR = "brandingHighlightColor";
  @SerializedName(SERIALIZED_NAME_BRANDING_HIGHLIGHT_COLOR)
  private String brandingHighlightColor;

  public static final String SERIALIZED_NAME_SUPPORT_URL = "supportUrl";
  @SerializedName(SERIALIZED_NAME_SUPPORT_URL)
  private String supportUrl;

  public static final String SERIALIZED_NAME_CARD_TYPE = "cardType";
  @SerializedName(SERIALIZED_NAME_CARD_TYPE)
  private String cardType;

  public static final String SERIALIZED_NAME_CARD_LAST4_DIGITS = "cardLast4Digits";
  @SerializedName(SERIALIZED_NAME_CARD_LAST4_DIGITS)
  private String cardLast4Digits;

  public static final String SERIALIZED_NAME_CARD_EXPIRY_MONTH = "cardExpiryMonth";
  @SerializedName(SERIALIZED_NAME_CARD_EXPIRY_MONTH)
  private String cardExpiryMonth;

  public static final String SERIALIZED_NAME_CARD_EXPIRY_YEAR = "cardExpiryYear";
  @SerializedName(SERIALIZED_NAME_CARD_EXPIRY_YEAR)
  private String cardExpiryYear;

  public static final String SERIALIZED_NAME_REFUNDABLE_AMOUNT = "refundableAmount";
  @SerializedName(SERIALIZED_NAME_REFUNDABLE_AMOUNT)
  private String refundableAmount;

  public static final String SERIALIZED_NAME_FOOTER_COMPANY_NAME = "footerCompanyName";
  @SerializedName(SERIALIZED_NAME_FOOTER_COMPANY_NAME)
  private String footerCompanyName;

  public static final String SERIALIZED_NAME_FOOTER_ADDRESS_LINE1 = "footerAddressLine1";
  @SerializedName(SERIALIZED_NAME_FOOTER_ADDRESS_LINE1)
  private String footerAddressLine1;

  public static final String SERIALIZED_NAME_FOOTER_ADDRESS_LINE2 = "footerAddressLine2";
  @SerializedName(SERIALIZED_NAME_FOOTER_ADDRESS_LINE2)
  private String footerAddressLine2;

  public static final String SERIALIZED_NAME_FOOTER_ADDRESS_STATE = "footerAddressState";
  @SerializedName(SERIALIZED_NAME_FOOTER_ADDRESS_STATE)
  private String footerAddressState;

  public static final String SERIALIZED_NAME_FOOTER_ADDRESS_CITY = "footerAddressCity";
  @SerializedName(SERIALIZED_NAME_FOOTER_ADDRESS_CITY)
  private String footerAddressCity;

  public static final String SERIALIZED_NAME_FOOTER_ADDRESS_POST_CODE = "footerAddressPostCode";
  @SerializedName(SERIALIZED_NAME_FOOTER_ADDRESS_POST_CODE)
  private String footerAddressPostCode;

  public static final String SERIALIZED_NAME_FOOTER_ADDRESS_COUNTRY_I_S_O3 = "footerAddressCountryISO3";
  @SerializedName(SERIALIZED_NAME_FOOTER_ADDRESS_COUNTRY_I_S_O3)
  private String footerAddressCountryISO3;

  public static final String SERIALIZED_NAME_FOOTER_EMAIL_ADDRESS = "footerEmailAddress";
  @SerializedName(SERIALIZED_NAME_FOOTER_EMAIL_ADDRESS)
  private String footerEmailAddress;

  public static final String SERIALIZED_NAME_FOOTER_PHONE_NUMBER_DIAL_COUNTRY = "footerPhoneNumberDialCountry";
  @SerializedName(SERIALIZED_NAME_FOOTER_PHONE_NUMBER_DIAL_COUNTRY)
  private String footerPhoneNumberDialCountry;

  public static final String SERIALIZED_NAME_FOOTER_PHONE_NUMBER_DIAL_CODE = "footerPhoneNumberDialCode";
  @SerializedName(SERIALIZED_NAME_FOOTER_PHONE_NUMBER_DIAL_CODE)
  private String footerPhoneNumberDialCode;

  public static final String SERIALIZED_NAME_FOOTER_PHONE_NUMBER = "footerPhoneNumber";
  @SerializedName(SERIALIZED_NAME_FOOTER_PHONE_NUMBER)
  private String footerPhoneNumber;

  public static final String SERIALIZED_NAME_SUPPORT_CONTACT_HEADING = "supportContactHeading";
  @SerializedName(SERIALIZED_NAME_SUPPORT_CONTACT_HEADING)
  private String supportContactHeading;

  public static final String SERIALIZED_NAME_SUPPORT_CONTACT_CONTENT = "supportContactContent";
  @SerializedName(SERIALIZED_NAME_SUPPORT_CONTACT_CONTENT)
  private String supportContactContent;

  public static final String SERIALIZED_NAME_SUPPORT_CONTACT_SUPPORT_URL = "supportContactSupportUrl";
  @SerializedName(SERIALIZED_NAME_SUPPORT_CONTACT_SUPPORT_URL)
  private String supportContactSupportUrl;

  public static final String SERIALIZED_NAME_SUPPORT_CONTACT_SUPPORT_URL_BUTTON_TEXT = "supportContactSupportUrlButtonText";
  @SerializedName(SERIALIZED_NAME_SUPPORT_CONTACT_SUPPORT_URL_BUTTON_TEXT)
  private String supportContactSupportUrlButtonText;

  public static final String SERIALIZED_NAME_IS_ADVERT_ENABLED = "isAdvertEnabled";
  @SerializedName(SERIALIZED_NAME_IS_ADVERT_ENABLED)
  private String isAdvertEnabled;

  public static final String SERIALIZED_NAME_ADVERT_IMAGE_URL = "advertImageUrl";
  @SerializedName(SERIALIZED_NAME_ADVERT_IMAGE_URL)
  private String advertImageUrl;

  public static final String SERIALIZED_NAME_ADVERT_LINK_TO_URL = "advertLinkToUrl";
  @SerializedName(SERIALIZED_NAME_ADVERT_LINK_TO_URL)
  private String advertLinkToUrl;

  public InvoiceDetailsResponse() {
  }

  public InvoiceDetailsResponse invoiceId(String invoiceId) {
    
    
    
    
    this.invoiceId = invoiceId;
    return this;
  }

   /**
   * Get invoiceId
   * @return invoiceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public String getInvoiceId() {
    return invoiceId;
  }


  public void setInvoiceId(String invoiceId) {
    
    
    
    this.invoiceId = invoiceId;
  }


  public InvoiceDetailsResponse customerEmail(String customerEmail) {
    
    
    
    
    this.customerEmail = customerEmail;
    return this;
  }

   /**
   * Get customerEmail
   * @return customerEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "mary.rose@msn.com", value = "")

  public String getCustomerEmail() {
    return customerEmail;
  }


  public void setCustomerEmail(String customerEmail) {
    
    
    
    this.customerEmail = customerEmail;
  }


  public InvoiceDetailsResponse customerFirstName(String customerFirstName) {
    
    
    
    
    this.customerFirstName = customerFirstName;
    return this;
  }

   /**
   * Get customerFirstName
   * @return customerFirstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Mary", value = "")

  public String getCustomerFirstName() {
    return customerFirstName;
  }


  public void setCustomerFirstName(String customerFirstName) {
    
    
    
    this.customerFirstName = customerFirstName;
  }


  public InvoiceDetailsResponse customerLastName(String customerLastName) {
    
    
    
    
    this.customerLastName = customerLastName;
    return this;
  }

   /**
   * Get customerLastName
   * @return customerLastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Rose", value = "")

  public String getCustomerLastName() {
    return customerLastName;
  }


  public void setCustomerLastName(String customerLastName) {
    
    
    
    this.customerLastName = customerLastName;
  }


  public InvoiceDetailsResponse customerUniqueId(String customerUniqueId) {
    
    
    
    
    this.customerUniqueId = customerUniqueId;
    return this;
  }

   /**
   * Get customerUniqueId
   * @return customerUniqueId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "8MJ7XU07D9", value = "")

  public String getCustomerUniqueId() {
    return customerUniqueId;
  }


  public void setCustomerUniqueId(String customerUniqueId) {
    
    
    
    this.customerUniqueId = customerUniqueId;
  }


  public InvoiceDetailsResponse addressLine1(String addressLine1) {
    
    
    
    
    this.addressLine1 = addressLine1;
    return this;
  }

   /**
   * Get addressLine1
   * @return addressLine1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "31 Long Avenue", value = "")

  public String getAddressLine1() {
    return addressLine1;
  }


  public void setAddressLine1(String addressLine1) {
    
    
    
    this.addressLine1 = addressLine1;
  }


  public InvoiceDetailsResponse addressLine2(String addressLine2) {
    
    
    
    
    this.addressLine2 = addressLine2;
    return this;
  }

   /**
   * Get addressLine2
   * @return addressLine2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Rickmansworth", value = "")

  public String getAddressLine2() {
    return addressLine2;
  }


  public void setAddressLine2(String addressLine2) {
    
    
    
    this.addressLine2 = addressLine2;
  }


  public InvoiceDetailsResponse addressPostCode(String addressPostCode) {
    
    
    
    
    this.addressPostCode = addressPostCode;
    return this;
  }

   /**
   * Get addressPostCode
   * @return addressPostCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "HA94WD", value = "")

  public String getAddressPostCode() {
    return addressPostCode;
  }


  public void setAddressPostCode(String addressPostCode) {
    
    
    
    this.addressPostCode = addressPostCode;
  }


  public InvoiceDetailsResponse addressCity(String addressCity) {
    
    
    
    
    this.addressCity = addressCity;
    return this;
  }

   /**
   * Get addressCity
   * @return addressCity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Buckinghamshire", value = "")

  public String getAddressCity() {
    return addressCity;
  }


  public void setAddressCity(String addressCity) {
    
    
    
    this.addressCity = addressCity;
  }


  public InvoiceDetailsResponse addressState(String addressState) {
    
    
    
    
    this.addressState = addressState;
    return this;
  }

   /**
   * Get addressState
   * @return addressState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Buckinghamshire", value = "")

  public String getAddressState() {
    return addressState;
  }


  public void setAddressState(String addressState) {
    
    
    
    this.addressState = addressState;
  }


  public InvoiceDetailsResponse addressCountry(String addressCountry) {
    
    
    
    
    this.addressCountry = addressCountry;
    return this;
  }

   /**
   * Get addressCountry
   * @return addressCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "United Kingdom", value = "")

  public String getAddressCountry() {
    return addressCountry;
  }


  public void setAddressCountry(String addressCountry) {
    
    
    
    this.addressCountry = addressCountry;
  }


  public InvoiceDetailsResponse addressCountryCode(String addressCountryCode) {
    
    
    
    
    this.addressCountryCode = addressCountryCode;
    return this;
  }

   /**
   * Get addressCountryCode
   * @return addressCountryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "GBR", value = "")

  public String getAddressCountryCode() {
    return addressCountryCode;
  }


  public void setAddressCountryCode(String addressCountryCode) {
    
    
    
    this.addressCountryCode = addressCountryCode;
  }


  public InvoiceDetailsResponse invoiceNumber(String invoiceNumber) {
    
    
    
    
    this.invoiceNumber = invoiceNumber;
    return this;
  }

   /**
   * Get invoiceNumber
   * @return invoiceNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0WX1VTRPWY-1", value = "")

  public String getInvoiceNumber() {
    return invoiceNumber;
  }


  public void setInvoiceNumber(String invoiceNumber) {
    
    
    
    this.invoiceNumber = invoiceNumber;
  }


  public InvoiceDetailsResponse createdOn(String createdOn) {
    
    
    
    
    this.createdOn = createdOn;
    return this;
  }

   /**
   * Get createdOn
   * @return createdOn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-04-29T00:14:57.297Z", value = "")

  public String getCreatedOn() {
    return createdOn;
  }


  public void setCreatedOn(String createdOn) {
    
    
    
    this.createdOn = createdOn;
  }


  public InvoiceDetailsResponse formattedAmount(String formattedAmount) {
    
    
    
    
    this.formattedAmount = formattedAmount;
    return this;
  }

   /**
   * Get formattedAmount
   * @return formattedAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "9", value = "")

  public String getFormattedAmount() {
    return formattedAmount;
  }


  public void setFormattedAmount(String formattedAmount) {
    
    
    
    this.formattedAmount = formattedAmount;
  }


  public InvoiceDetailsResponse amount(String amount) {
    
    
    
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10", value = "")

  public String getAmount() {
    return amount;
  }


  public void setAmount(String amount) {
    
    
    
    this.amount = amount;
  }


  public InvoiceDetailsResponse currency(String currency) {
    
    
    
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "gbp", value = "")

  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    
    
    
    this.currency = currency;
  }


  public InvoiceDetailsResponse status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "active", value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public InvoiceDetailsResponse subTotal(String subTotal) {
    
    
    
    
    this.subTotal = subTotal;
    return this;
  }

   /**
   * Get subTotal
   * @return subTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "400", value = "")

  public String getSubTotal() {
    return subTotal;
  }


  public void setSubTotal(String subTotal) {
    
    
    
    this.subTotal = subTotal;
  }


  public InvoiceDetailsResponse taxTotal(String taxTotal) {
    
    
    
    
    this.taxTotal = taxTotal;
    return this;
  }

   /**
   * Get taxTotal
   * @return taxTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "200", value = "")

  public String getTaxTotal() {
    return taxTotal;
  }


  public void setTaxTotal(String taxTotal) {
    
    
    
    this.taxTotal = taxTotal;
  }


  public InvoiceDetailsResponse prorationAdjustment(String prorationAdjustment) {
    
    
    
    
    this.prorationAdjustment = prorationAdjustment;
    return this;
  }

   /**
   * Get prorationAdjustment
   * @return prorationAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "£0", value = "")

  public String getProrationAdjustment() {
    return prorationAdjustment;
  }


  public void setProrationAdjustment(String prorationAdjustment) {
    
    
    
    this.prorationAdjustment = prorationAdjustment;
  }


  public InvoiceDetailsResponse prorationFactor(Object prorationFactor) {
    
    
    
    
    this.prorationFactor = prorationFactor;
    return this;
  }

   /**
   * Get prorationFactor
   * @return prorationFactor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getProrationFactor() {
    return prorationFactor;
  }


  public void setProrationFactor(Object prorationFactor) {
    
    
    
    this.prorationFactor = prorationFactor;
  }


  public InvoiceDetailsResponse taxes(List<Object> taxes) {
    
    
    
    
    this.taxes = taxes;
    return this;
  }

  public InvoiceDetailsResponse addTaxesItem(Object taxesItem) {
    if (this.taxes == null) {
      this.taxes = new ArrayList<>();
    }
    this.taxes.add(taxesItem);
    return this;
  }

   /**
   * Get taxes
   * @return taxes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getTaxes() {
    return taxes;
  }


  public void setTaxes(List<Object> taxes) {
    
    
    
    this.taxes = taxes;
  }


  public InvoiceDetailsResponse invoiceType(String invoiceType) {
    
    
    
    
    this.invoiceType = invoiceType;
    return this;
  }

   /**
   * Get invoiceType
   * @return invoiceType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "renewal", value = "")

  public String getInvoiceType() {
    return invoiceType;
  }


  public void setInvoiceType(String invoiceType) {
    
    
    
    this.invoiceType = invoiceType;
  }


  public InvoiceDetailsResponse subscriptions(List<InvoiceDetailsResponseSubscriptionsInner> subscriptions) {
    
    
    
    
    this.subscriptions = subscriptions;
    return this;
  }

  public InvoiceDetailsResponse addSubscriptionsItem(InvoiceDetailsResponseSubscriptionsInner subscriptionsItem) {
    if (this.subscriptions == null) {
      this.subscriptions = new ArrayList<>();
    }
    this.subscriptions.add(subscriptionsItem);
    return this;
  }

   /**
   * Get subscriptions
   * @return subscriptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<InvoiceDetailsResponseSubscriptionsInner> getSubscriptions() {
    return subscriptions;
  }


  public void setSubscriptions(List<InvoiceDetailsResponseSubscriptionsInner> subscriptions) {
    
    
    
    this.subscriptions = subscriptions;
  }


  public InvoiceDetailsResponse companyName(String companyName) {
    
    
    
    
    this.companyName = companyName;
    return this;
  }

   /**
   * Get companyName
   * @return companyName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "flowers", value = "")

  public String getCompanyName() {
    return companyName;
  }


  public void setCompanyName(String companyName) {
    
    
    
    this.companyName = companyName;
  }


  public InvoiceDetailsResponse companyEmail(String companyEmail) {
    
    
    
    
    this.companyEmail = companyEmail;
    return this;
  }

   /**
   * Get companyEmail
   * @return companyEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "flowers@flowers.com", value = "")

  public String getCompanyEmail() {
    return companyEmail;
  }


  public void setCompanyEmail(String companyEmail) {
    
    
    
    this.companyEmail = companyEmail;
  }


  public InvoiceDetailsResponse companyTaxNumber(String companyTaxNumber) {
    
    
    
    
    this.companyTaxNumber = companyTaxNumber;
    return this;
  }

   /**
   * Get companyTaxNumber
   * @return companyTaxNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "12345678", value = "")

  public String getCompanyTaxNumber() {
    return companyTaxNumber;
  }


  public void setCompanyTaxNumber(String companyTaxNumber) {
    
    
    
    this.companyTaxNumber = companyTaxNumber;
  }


  public InvoiceDetailsResponse companyDomain(String companyDomain) {
    
    
    
    
    this.companyDomain = companyDomain;
    return this;
  }

   /**
   * Get companyDomain
   * @return companyDomain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "flowers", value = "")

  public String getCompanyDomain() {
    return companyDomain;
  }


  public void setCompanyDomain(String companyDomain) {
    
    
    
    this.companyDomain = companyDomain;
  }


  public InvoiceDetailsResponse companyPhoneNumberDialCountry(String companyPhoneNumberDialCountry) {
    
    
    
    
    this.companyPhoneNumberDialCountry = companyPhoneNumberDialCountry;
    return this;
  }

   /**
   * Get companyPhoneNumberDialCountry
   * @return companyPhoneNumberDialCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0044", value = "")

  public String getCompanyPhoneNumberDialCountry() {
    return companyPhoneNumberDialCountry;
  }


  public void setCompanyPhoneNumberDialCountry(String companyPhoneNumberDialCountry) {
    
    
    
    this.companyPhoneNumberDialCountry = companyPhoneNumberDialCountry;
  }


  public InvoiceDetailsResponse companyPhoneNumberDialCode(String companyPhoneNumberDialCode) {
    
    
    
    
    this.companyPhoneNumberDialCode = companyPhoneNumberDialCode;
    return this;
  }

   /**
   * Get companyPhoneNumberDialCode
   * @return companyPhoneNumberDialCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0044", value = "")

  public String getCompanyPhoneNumberDialCode() {
    return companyPhoneNumberDialCode;
  }


  public void setCompanyPhoneNumberDialCode(String companyPhoneNumberDialCode) {
    
    
    
    this.companyPhoneNumberDialCode = companyPhoneNumberDialCode;
  }


  public InvoiceDetailsResponse companyPhoneNumber(String companyPhoneNumber) {
    
    
    
    
    this.companyPhoneNumber = companyPhoneNumber;
    return this;
  }

   /**
   * Get companyPhoneNumber
   * @return companyPhoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "02088671028", value = "")

  public String getCompanyPhoneNumber() {
    return companyPhoneNumber;
  }


  public void setCompanyPhoneNumber(String companyPhoneNumber) {
    
    
    
    this.companyPhoneNumber = companyPhoneNumber;
  }


  public InvoiceDetailsResponse companyAddressLine1(String companyAddressLine1) {
    
    
    
    
    this.companyAddressLine1 = companyAddressLine1;
    return this;
  }

   /**
   * Get companyAddressLine1
   * @return companyAddressLine1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "wework, 1 fore street", value = "")

  public String getCompanyAddressLine1() {
    return companyAddressLine1;
  }


  public void setCompanyAddressLine1(String companyAddressLine1) {
    
    
    
    this.companyAddressLine1 = companyAddressLine1;
  }


  public InvoiceDetailsResponse companyAddressLine2(String companyAddressLine2) {
    
    
    
    
    this.companyAddressLine2 = companyAddressLine2;
    return this;
  }

   /**
   * Get companyAddressLine2
   * @return companyAddressLine2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "moorgate", value = "")

  public String getCompanyAddressLine2() {
    return companyAddressLine2;
  }


  public void setCompanyAddressLine2(String companyAddressLine2) {
    
    
    
    this.companyAddressLine2 = companyAddressLine2;
  }


  public InvoiceDetailsResponse companyCity(String companyCity) {
    
    
    
    
    this.companyCity = companyCity;
    return this;
  }

   /**
   * Get companyCity
   * @return companyCity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "london", value = "")

  public String getCompanyCity() {
    return companyCity;
  }


  public void setCompanyCity(String companyCity) {
    
    
    
    this.companyCity = companyCity;
  }


  public InvoiceDetailsResponse companyState(String companyState) {
    
    
    
    
    this.companyState = companyState;
    return this;
  }

   /**
   * Get companyState
   * @return companyState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "london", value = "")

  public String getCompanyState() {
    return companyState;
  }


  public void setCompanyState(String companyState) {
    
    
    
    this.companyState = companyState;
  }


  public InvoiceDetailsResponse companyPostCode(String companyPostCode) {
    
    
    
    
    this.companyPostCode = companyPostCode;
    return this;
  }

   /**
   * Get companyPostCode
   * @return companyPostCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ec2y9dt", value = "")

  public String getCompanyPostCode() {
    return companyPostCode;
  }


  public void setCompanyPostCode(String companyPostCode) {
    
    
    
    this.companyPostCode = companyPostCode;
  }


  public InvoiceDetailsResponse companyCountry(String companyCountry) {
    
    
    
    
    this.companyCountry = companyCountry;
    return this;
  }

   /**
   * Get companyCountry
   * @return companyCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "united kingdom", value = "")

  public String getCompanyCountry() {
    return companyCountry;
  }


  public void setCompanyCountry(String companyCountry) {
    
    
    
    this.companyCountry = companyCountry;
  }


  public InvoiceDetailsResponse brandingLogo(String brandingLogo) {
    
    
    
    
    this.brandingLogo = brandingLogo;
    return this;
  }

   /**
   * Get brandingLogo
   * @return brandingLogo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "logo.jpg", value = "")

  public String getBrandingLogo() {
    return brandingLogo;
  }


  public void setBrandingLogo(String brandingLogo) {
    
    
    
    this.brandingLogo = brandingLogo;
  }


  public InvoiceDetailsResponse brandingLogoBackgroundColor(String brandingLogoBackgroundColor) {
    
    
    
    
    this.brandingLogoBackgroundColor = brandingLogoBackgroundColor;
    return this;
  }

   /**
   * Get brandingLogoBackgroundColor
   * @return brandingLogoBackgroundColor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "black", value = "")

  public String getBrandingLogoBackgroundColor() {
    return brandingLogoBackgroundColor;
  }


  public void setBrandingLogoBackgroundColor(String brandingLogoBackgroundColor) {
    
    
    
    this.brandingLogoBackgroundColor = brandingLogoBackgroundColor;
  }


  public InvoiceDetailsResponse brandingHighlightColor(String brandingHighlightColor) {
    
    
    
    
    this.brandingHighlightColor = brandingHighlightColor;
    return this;
  }

   /**
   * Get brandingHighlightColor
   * @return brandingHighlightColor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "pink", value = "")

  public String getBrandingHighlightColor() {
    return brandingHighlightColor;
  }


  public void setBrandingHighlightColor(String brandingHighlightColor) {
    
    
    
    this.brandingHighlightColor = brandingHighlightColor;
  }


  public InvoiceDetailsResponse supportUrl(String supportUrl) {
    
    
    
    
    this.supportUrl = supportUrl;
    return this;
  }

   /**
   * Get supportUrl
   * @return supportUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "support@flowers.co.uk", value = "")

  public String getSupportUrl() {
    return supportUrl;
  }


  public void setSupportUrl(String supportUrl) {
    
    
    
    this.supportUrl = supportUrl;
  }


  public InvoiceDetailsResponse cardType(String cardType) {
    
    
    
    
    this.cardType = cardType;
    return this;
  }

   /**
   * Get cardType
   * @return cardType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "mastercard", value = "")

  public String getCardType() {
    return cardType;
  }


  public void setCardType(String cardType) {
    
    
    
    this.cardType = cardType;
  }


  public InvoiceDetailsResponse cardLast4Digits(String cardLast4Digits) {
    
    
    
    
    this.cardLast4Digits = cardLast4Digits;
    return this;
  }

   /**
   * Get cardLast4Digits
   * @return cardLast4Digits
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "8972", value = "")

  public String getCardLast4Digits() {
    return cardLast4Digits;
  }


  public void setCardLast4Digits(String cardLast4Digits) {
    
    
    
    this.cardLast4Digits = cardLast4Digits;
  }


  public InvoiceDetailsResponse cardExpiryMonth(String cardExpiryMonth) {
    
    
    
    
    this.cardExpiryMonth = cardExpiryMonth;
    return this;
  }

   /**
   * Get cardExpiryMonth
   * @return cardExpiryMonth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "07", value = "")

  public String getCardExpiryMonth() {
    return cardExpiryMonth;
  }


  public void setCardExpiryMonth(String cardExpiryMonth) {
    
    
    
    this.cardExpiryMonth = cardExpiryMonth;
  }


  public InvoiceDetailsResponse cardExpiryYear(String cardExpiryYear) {
    
    
    
    
    this.cardExpiryYear = cardExpiryYear;
    return this;
  }

   /**
   * Get cardExpiryYear
   * @return cardExpiryYear
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "23", value = "")

  public String getCardExpiryYear() {
    return cardExpiryYear;
  }


  public void setCardExpiryYear(String cardExpiryYear) {
    
    
    
    this.cardExpiryYear = cardExpiryYear;
  }


  public InvoiceDetailsResponse refundableAmount(String refundableAmount) {
    
    
    
    
    this.refundableAmount = refundableAmount;
    return this;
  }

   /**
   * Get refundableAmount
   * @return refundableAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10", value = "")

  public String getRefundableAmount() {
    return refundableAmount;
  }


  public void setRefundableAmount(String refundableAmount) {
    
    
    
    this.refundableAmount = refundableAmount;
  }


  public InvoiceDetailsResponse footerCompanyName(String footerCompanyName) {
    
    
    
    
    this.footerCompanyName = footerCompanyName;
    return this;
  }

   /**
   * Get footerCompanyName
   * @return footerCompanyName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "flowers", value = "")

  public String getFooterCompanyName() {
    return footerCompanyName;
  }


  public void setFooterCompanyName(String footerCompanyName) {
    
    
    
    this.footerCompanyName = footerCompanyName;
  }


  public InvoiceDetailsResponse footerAddressLine1(String footerAddressLine1) {
    
    
    
    
    this.footerAddressLine1 = footerAddressLine1;
    return this;
  }

   /**
   * Get footerAddressLine1
   * @return footerAddressLine1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "wework, 1 fore street", value = "")

  public String getFooterAddressLine1() {
    return footerAddressLine1;
  }


  public void setFooterAddressLine1(String footerAddressLine1) {
    
    
    
    this.footerAddressLine1 = footerAddressLine1;
  }


  public InvoiceDetailsResponse footerAddressLine2(String footerAddressLine2) {
    
    
    
    
    this.footerAddressLine2 = footerAddressLine2;
    return this;
  }

   /**
   * Get footerAddressLine2
   * @return footerAddressLine2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "moorgate", value = "")

  public String getFooterAddressLine2() {
    return footerAddressLine2;
  }


  public void setFooterAddressLine2(String footerAddressLine2) {
    
    
    
    this.footerAddressLine2 = footerAddressLine2;
  }


  public InvoiceDetailsResponse footerAddressState(String footerAddressState) {
    
    
    
    
    this.footerAddressState = footerAddressState;
    return this;
  }

   /**
   * Get footerAddressState
   * @return footerAddressState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "moorgate", value = "")

  public String getFooterAddressState() {
    return footerAddressState;
  }


  public void setFooterAddressState(String footerAddressState) {
    
    
    
    this.footerAddressState = footerAddressState;
  }


  public InvoiceDetailsResponse footerAddressCity(String footerAddressCity) {
    
    
    
    
    this.footerAddressCity = footerAddressCity;
    return this;
  }

   /**
   * Get footerAddressCity
   * @return footerAddressCity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "london", value = "")

  public String getFooterAddressCity() {
    return footerAddressCity;
  }


  public void setFooterAddressCity(String footerAddressCity) {
    
    
    
    this.footerAddressCity = footerAddressCity;
  }


  public InvoiceDetailsResponse footerAddressPostCode(String footerAddressPostCode) {
    
    
    
    
    this.footerAddressPostCode = footerAddressPostCode;
    return this;
  }

   /**
   * Get footerAddressPostCode
   * @return footerAddressPostCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ec2y9dt", value = "")

  public String getFooterAddressPostCode() {
    return footerAddressPostCode;
  }


  public void setFooterAddressPostCode(String footerAddressPostCode) {
    
    
    
    this.footerAddressPostCode = footerAddressPostCode;
  }


  public InvoiceDetailsResponse footerAddressCountryISO3(String footerAddressCountryISO3) {
    
    
    
    
    this.footerAddressCountryISO3 = footerAddressCountryISO3;
    return this;
  }

   /**
   * Get footerAddressCountryISO3
   * @return footerAddressCountryISO3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "united kingdom", value = "")

  public String getFooterAddressCountryISO3() {
    return footerAddressCountryISO3;
  }


  public void setFooterAddressCountryISO3(String footerAddressCountryISO3) {
    
    
    
    this.footerAddressCountryISO3 = footerAddressCountryISO3;
  }


  public InvoiceDetailsResponse footerEmailAddress(String footerEmailAddress) {
    
    
    
    
    this.footerEmailAddress = footerEmailAddress;
    return this;
  }

   /**
   * Get footerEmailAddress
   * @return footerEmailAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "flowers@flowers.com", value = "")

  public String getFooterEmailAddress() {
    return footerEmailAddress;
  }


  public void setFooterEmailAddress(String footerEmailAddress) {
    
    
    
    this.footerEmailAddress = footerEmailAddress;
  }


  public InvoiceDetailsResponse footerPhoneNumberDialCountry(String footerPhoneNumberDialCountry) {
    
    
    
    
    this.footerPhoneNumberDialCountry = footerPhoneNumberDialCountry;
    return this;
  }

   /**
   * Get footerPhoneNumberDialCountry
   * @return footerPhoneNumberDialCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0044", value = "")

  public String getFooterPhoneNumberDialCountry() {
    return footerPhoneNumberDialCountry;
  }


  public void setFooterPhoneNumberDialCountry(String footerPhoneNumberDialCountry) {
    
    
    
    this.footerPhoneNumberDialCountry = footerPhoneNumberDialCountry;
  }


  public InvoiceDetailsResponse footerPhoneNumberDialCode(String footerPhoneNumberDialCode) {
    
    
    
    
    this.footerPhoneNumberDialCode = footerPhoneNumberDialCode;
    return this;
  }

   /**
   * Get footerPhoneNumberDialCode
   * @return footerPhoneNumberDialCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0044", value = "")

  public String getFooterPhoneNumberDialCode() {
    return footerPhoneNumberDialCode;
  }


  public void setFooterPhoneNumberDialCode(String footerPhoneNumberDialCode) {
    
    
    
    this.footerPhoneNumberDialCode = footerPhoneNumberDialCode;
  }


  public InvoiceDetailsResponse footerPhoneNumber(String footerPhoneNumber) {
    
    
    
    
    this.footerPhoneNumber = footerPhoneNumber;
    return this;
  }

   /**
   * Get footerPhoneNumber
   * @return footerPhoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "02088671028", value = "")

  public String getFooterPhoneNumber() {
    return footerPhoneNumber;
  }


  public void setFooterPhoneNumber(String footerPhoneNumber) {
    
    
    
    this.footerPhoneNumber = footerPhoneNumber;
  }


  public InvoiceDetailsResponse supportContactHeading(String supportContactHeading) {
    
    
    
    
    this.supportContactHeading = supportContactHeading;
    return this;
  }

   /**
   * Get supportContactHeading
   * @return supportContactHeading
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "support", value = "")

  public String getSupportContactHeading() {
    return supportContactHeading;
  }


  public void setSupportContactHeading(String supportContactHeading) {
    
    
    
    this.supportContactHeading = supportContactHeading;
  }


  public InvoiceDetailsResponse supportContactContent(String supportContactContent) {
    
    
    
    
    this.supportContactContent = supportContactContent;
    return this;
  }

   /**
   * Get supportContactContent
   * @return supportContactContent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "mary rose", value = "")

  public String getSupportContactContent() {
    return supportContactContent;
  }


  public void setSupportContactContent(String supportContactContent) {
    
    
    
    this.supportContactContent = supportContactContent;
  }


  public InvoiceDetailsResponse supportContactSupportUrl(String supportContactSupportUrl) {
    
    
    
    
    this.supportContactSupportUrl = supportContactSupportUrl;
    return this;
  }

   /**
   * Get supportContactSupportUrl
   * @return supportContactSupportUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "support@flowers.com", value = "")

  public String getSupportContactSupportUrl() {
    return supportContactSupportUrl;
  }


  public void setSupportContactSupportUrl(String supportContactSupportUrl) {
    
    
    
    this.supportContactSupportUrl = supportContactSupportUrl;
  }


  public InvoiceDetailsResponse supportContactSupportUrlButtonText(String supportContactSupportUrlButtonText) {
    
    
    
    
    this.supportContactSupportUrlButtonText = supportContactSupportUrlButtonText;
    return this;
  }

   /**
   * Get supportContactSupportUrlButtonText
   * @return supportContactSupportUrlButtonText
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "support", value = "")

  public String getSupportContactSupportUrlButtonText() {
    return supportContactSupportUrlButtonText;
  }


  public void setSupportContactSupportUrlButtonText(String supportContactSupportUrlButtonText) {
    
    
    
    this.supportContactSupportUrlButtonText = supportContactSupportUrlButtonText;
  }


  public InvoiceDetailsResponse isAdvertEnabled(String isAdvertEnabled) {
    
    
    
    
    this.isAdvertEnabled = isAdvertEnabled;
    return this;
  }

   /**
   * Get isAdvertEnabled
   * @return isAdvertEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public String getIsAdvertEnabled() {
    return isAdvertEnabled;
  }


  public void setIsAdvertEnabled(String isAdvertEnabled) {
    
    
    
    this.isAdvertEnabled = isAdvertEnabled;
  }


  public InvoiceDetailsResponse advertImageUrl(String advertImageUrl) {
    
    
    
    
    this.advertImageUrl = advertImageUrl;
    return this;
  }

   /**
   * Get advertImageUrl
   * @return advertImageUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "advert.com", value = "")

  public String getAdvertImageUrl() {
    return advertImageUrl;
  }


  public void setAdvertImageUrl(String advertImageUrl) {
    
    
    
    this.advertImageUrl = advertImageUrl;
  }


  public InvoiceDetailsResponse advertLinkToUrl(String advertLinkToUrl) {
    
    
    
    
    this.advertLinkToUrl = advertLinkToUrl;
    return this;
  }

   /**
   * Get advertLinkToUrl
   * @return advertLinkToUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "advert.com", value = "")

  public String getAdvertLinkToUrl() {
    return advertLinkToUrl;
  }


  public void setAdvertLinkToUrl(String advertLinkToUrl) {
    
    
    
    this.advertLinkToUrl = advertLinkToUrl;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the InvoiceDetailsResponse instance itself
   */
  public InvoiceDetailsResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoiceDetailsResponse invoiceDetailsResponse = (InvoiceDetailsResponse) o;
    return Objects.equals(this.invoiceId, invoiceDetailsResponse.invoiceId) &&
        Objects.equals(this.customerEmail, invoiceDetailsResponse.customerEmail) &&
        Objects.equals(this.customerFirstName, invoiceDetailsResponse.customerFirstName) &&
        Objects.equals(this.customerLastName, invoiceDetailsResponse.customerLastName) &&
        Objects.equals(this.customerUniqueId, invoiceDetailsResponse.customerUniqueId) &&
        Objects.equals(this.addressLine1, invoiceDetailsResponse.addressLine1) &&
        Objects.equals(this.addressLine2, invoiceDetailsResponse.addressLine2) &&
        Objects.equals(this.addressPostCode, invoiceDetailsResponse.addressPostCode) &&
        Objects.equals(this.addressCity, invoiceDetailsResponse.addressCity) &&
        Objects.equals(this.addressState, invoiceDetailsResponse.addressState) &&
        Objects.equals(this.addressCountry, invoiceDetailsResponse.addressCountry) &&
        Objects.equals(this.addressCountryCode, invoiceDetailsResponse.addressCountryCode) &&
        Objects.equals(this.invoiceNumber, invoiceDetailsResponse.invoiceNumber) &&
        Objects.equals(this.createdOn, invoiceDetailsResponse.createdOn) &&
        Objects.equals(this.formattedAmount, invoiceDetailsResponse.formattedAmount) &&
        Objects.equals(this.amount, invoiceDetailsResponse.amount) &&
        Objects.equals(this.currency, invoiceDetailsResponse.currency) &&
        Objects.equals(this.status, invoiceDetailsResponse.status) &&
        Objects.equals(this.subTotal, invoiceDetailsResponse.subTotal) &&
        Objects.equals(this.taxTotal, invoiceDetailsResponse.taxTotal) &&
        Objects.equals(this.prorationAdjustment, invoiceDetailsResponse.prorationAdjustment) &&
        Objects.equals(this.prorationFactor, invoiceDetailsResponse.prorationFactor) &&
        Objects.equals(this.taxes, invoiceDetailsResponse.taxes) &&
        Objects.equals(this.invoiceType, invoiceDetailsResponse.invoiceType) &&
        Objects.equals(this.subscriptions, invoiceDetailsResponse.subscriptions) &&
        Objects.equals(this.companyName, invoiceDetailsResponse.companyName) &&
        Objects.equals(this.companyEmail, invoiceDetailsResponse.companyEmail) &&
        Objects.equals(this.companyTaxNumber, invoiceDetailsResponse.companyTaxNumber) &&
        Objects.equals(this.companyDomain, invoiceDetailsResponse.companyDomain) &&
        Objects.equals(this.companyPhoneNumberDialCountry, invoiceDetailsResponse.companyPhoneNumberDialCountry) &&
        Objects.equals(this.companyPhoneNumberDialCode, invoiceDetailsResponse.companyPhoneNumberDialCode) &&
        Objects.equals(this.companyPhoneNumber, invoiceDetailsResponse.companyPhoneNumber) &&
        Objects.equals(this.companyAddressLine1, invoiceDetailsResponse.companyAddressLine1) &&
        Objects.equals(this.companyAddressLine2, invoiceDetailsResponse.companyAddressLine2) &&
        Objects.equals(this.companyCity, invoiceDetailsResponse.companyCity) &&
        Objects.equals(this.companyState, invoiceDetailsResponse.companyState) &&
        Objects.equals(this.companyPostCode, invoiceDetailsResponse.companyPostCode) &&
        Objects.equals(this.companyCountry, invoiceDetailsResponse.companyCountry) &&
        Objects.equals(this.brandingLogo, invoiceDetailsResponse.brandingLogo) &&
        Objects.equals(this.brandingLogoBackgroundColor, invoiceDetailsResponse.brandingLogoBackgroundColor) &&
        Objects.equals(this.brandingHighlightColor, invoiceDetailsResponse.brandingHighlightColor) &&
        Objects.equals(this.supportUrl, invoiceDetailsResponse.supportUrl) &&
        Objects.equals(this.cardType, invoiceDetailsResponse.cardType) &&
        Objects.equals(this.cardLast4Digits, invoiceDetailsResponse.cardLast4Digits) &&
        Objects.equals(this.cardExpiryMonth, invoiceDetailsResponse.cardExpiryMonth) &&
        Objects.equals(this.cardExpiryYear, invoiceDetailsResponse.cardExpiryYear) &&
        Objects.equals(this.refundableAmount, invoiceDetailsResponse.refundableAmount) &&
        Objects.equals(this.footerCompanyName, invoiceDetailsResponse.footerCompanyName) &&
        Objects.equals(this.footerAddressLine1, invoiceDetailsResponse.footerAddressLine1) &&
        Objects.equals(this.footerAddressLine2, invoiceDetailsResponse.footerAddressLine2) &&
        Objects.equals(this.footerAddressState, invoiceDetailsResponse.footerAddressState) &&
        Objects.equals(this.footerAddressCity, invoiceDetailsResponse.footerAddressCity) &&
        Objects.equals(this.footerAddressPostCode, invoiceDetailsResponse.footerAddressPostCode) &&
        Objects.equals(this.footerAddressCountryISO3, invoiceDetailsResponse.footerAddressCountryISO3) &&
        Objects.equals(this.footerEmailAddress, invoiceDetailsResponse.footerEmailAddress) &&
        Objects.equals(this.footerPhoneNumberDialCountry, invoiceDetailsResponse.footerPhoneNumberDialCountry) &&
        Objects.equals(this.footerPhoneNumberDialCode, invoiceDetailsResponse.footerPhoneNumberDialCode) &&
        Objects.equals(this.footerPhoneNumber, invoiceDetailsResponse.footerPhoneNumber) &&
        Objects.equals(this.supportContactHeading, invoiceDetailsResponse.supportContactHeading) &&
        Objects.equals(this.supportContactContent, invoiceDetailsResponse.supportContactContent) &&
        Objects.equals(this.supportContactSupportUrl, invoiceDetailsResponse.supportContactSupportUrl) &&
        Objects.equals(this.supportContactSupportUrlButtonText, invoiceDetailsResponse.supportContactSupportUrlButtonText) &&
        Objects.equals(this.isAdvertEnabled, invoiceDetailsResponse.isAdvertEnabled) &&
        Objects.equals(this.advertImageUrl, invoiceDetailsResponse.advertImageUrl) &&
        Objects.equals(this.advertLinkToUrl, invoiceDetailsResponse.advertLinkToUrl)&&
        Objects.equals(this.additionalProperties, invoiceDetailsResponse.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(invoiceId, customerEmail, customerFirstName, customerLastName, customerUniqueId, addressLine1, addressLine2, addressPostCode, addressCity, addressState, addressCountry, addressCountryCode, invoiceNumber, createdOn, formattedAmount, amount, currency, status, subTotal, taxTotal, prorationAdjustment, prorationFactor, taxes, invoiceType, subscriptions, companyName, companyEmail, companyTaxNumber, companyDomain, companyPhoneNumberDialCountry, companyPhoneNumberDialCode, companyPhoneNumber, companyAddressLine1, companyAddressLine2, companyCity, companyState, companyPostCode, companyCountry, brandingLogo, brandingLogoBackgroundColor, brandingHighlightColor, supportUrl, cardType, cardLast4Digits, cardExpiryMonth, cardExpiryYear, refundableAmount, footerCompanyName, footerAddressLine1, footerAddressLine2, footerAddressState, footerAddressCity, footerAddressPostCode, footerAddressCountryISO3, footerEmailAddress, footerPhoneNumberDialCountry, footerPhoneNumberDialCode, footerPhoneNumber, supportContactHeading, supportContactContent, supportContactSupportUrl, supportContactSupportUrlButtonText, isAdvertEnabled, advertImageUrl, advertLinkToUrl, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoiceDetailsResponse {\n");
    sb.append("    invoiceId: ").append(toIndentedString(invoiceId)).append("\n");
    sb.append("    customerEmail: ").append(toIndentedString(customerEmail)).append("\n");
    sb.append("    customerFirstName: ").append(toIndentedString(customerFirstName)).append("\n");
    sb.append("    customerLastName: ").append(toIndentedString(customerLastName)).append("\n");
    sb.append("    customerUniqueId: ").append(toIndentedString(customerUniqueId)).append("\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
    sb.append("    addressPostCode: ").append(toIndentedString(addressPostCode)).append("\n");
    sb.append("    addressCity: ").append(toIndentedString(addressCity)).append("\n");
    sb.append("    addressState: ").append(toIndentedString(addressState)).append("\n");
    sb.append("    addressCountry: ").append(toIndentedString(addressCountry)).append("\n");
    sb.append("    addressCountryCode: ").append(toIndentedString(addressCountryCode)).append("\n");
    sb.append("    invoiceNumber: ").append(toIndentedString(invoiceNumber)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    formattedAmount: ").append(toIndentedString(formattedAmount)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subTotal: ").append(toIndentedString(subTotal)).append("\n");
    sb.append("    taxTotal: ").append(toIndentedString(taxTotal)).append("\n");
    sb.append("    prorationAdjustment: ").append(toIndentedString(prorationAdjustment)).append("\n");
    sb.append("    prorationFactor: ").append(toIndentedString(prorationFactor)).append("\n");
    sb.append("    taxes: ").append(toIndentedString(taxes)).append("\n");
    sb.append("    invoiceType: ").append(toIndentedString(invoiceType)).append("\n");
    sb.append("    subscriptions: ").append(toIndentedString(subscriptions)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    companyEmail: ").append(toIndentedString(companyEmail)).append("\n");
    sb.append("    companyTaxNumber: ").append(toIndentedString(companyTaxNumber)).append("\n");
    sb.append("    companyDomain: ").append(toIndentedString(companyDomain)).append("\n");
    sb.append("    companyPhoneNumberDialCountry: ").append(toIndentedString(companyPhoneNumberDialCountry)).append("\n");
    sb.append("    companyPhoneNumberDialCode: ").append(toIndentedString(companyPhoneNumberDialCode)).append("\n");
    sb.append("    companyPhoneNumber: ").append(toIndentedString(companyPhoneNumber)).append("\n");
    sb.append("    companyAddressLine1: ").append(toIndentedString(companyAddressLine1)).append("\n");
    sb.append("    companyAddressLine2: ").append(toIndentedString(companyAddressLine2)).append("\n");
    sb.append("    companyCity: ").append(toIndentedString(companyCity)).append("\n");
    sb.append("    companyState: ").append(toIndentedString(companyState)).append("\n");
    sb.append("    companyPostCode: ").append(toIndentedString(companyPostCode)).append("\n");
    sb.append("    companyCountry: ").append(toIndentedString(companyCountry)).append("\n");
    sb.append("    brandingLogo: ").append(toIndentedString(brandingLogo)).append("\n");
    sb.append("    brandingLogoBackgroundColor: ").append(toIndentedString(brandingLogoBackgroundColor)).append("\n");
    sb.append("    brandingHighlightColor: ").append(toIndentedString(brandingHighlightColor)).append("\n");
    sb.append("    supportUrl: ").append(toIndentedString(supportUrl)).append("\n");
    sb.append("    cardType: ").append(toIndentedString(cardType)).append("\n");
    sb.append("    cardLast4Digits: ").append(toIndentedString(cardLast4Digits)).append("\n");
    sb.append("    cardExpiryMonth: ").append(toIndentedString(cardExpiryMonth)).append("\n");
    sb.append("    cardExpiryYear: ").append(toIndentedString(cardExpiryYear)).append("\n");
    sb.append("    refundableAmount: ").append(toIndentedString(refundableAmount)).append("\n");
    sb.append("    footerCompanyName: ").append(toIndentedString(footerCompanyName)).append("\n");
    sb.append("    footerAddressLine1: ").append(toIndentedString(footerAddressLine1)).append("\n");
    sb.append("    footerAddressLine2: ").append(toIndentedString(footerAddressLine2)).append("\n");
    sb.append("    footerAddressState: ").append(toIndentedString(footerAddressState)).append("\n");
    sb.append("    footerAddressCity: ").append(toIndentedString(footerAddressCity)).append("\n");
    sb.append("    footerAddressPostCode: ").append(toIndentedString(footerAddressPostCode)).append("\n");
    sb.append("    footerAddressCountryISO3: ").append(toIndentedString(footerAddressCountryISO3)).append("\n");
    sb.append("    footerEmailAddress: ").append(toIndentedString(footerEmailAddress)).append("\n");
    sb.append("    footerPhoneNumberDialCountry: ").append(toIndentedString(footerPhoneNumberDialCountry)).append("\n");
    sb.append("    footerPhoneNumberDialCode: ").append(toIndentedString(footerPhoneNumberDialCode)).append("\n");
    sb.append("    footerPhoneNumber: ").append(toIndentedString(footerPhoneNumber)).append("\n");
    sb.append("    supportContactHeading: ").append(toIndentedString(supportContactHeading)).append("\n");
    sb.append("    supportContactContent: ").append(toIndentedString(supportContactContent)).append("\n");
    sb.append("    supportContactSupportUrl: ").append(toIndentedString(supportContactSupportUrl)).append("\n");
    sb.append("    supportContactSupportUrlButtonText: ").append(toIndentedString(supportContactSupportUrlButtonText)).append("\n");
    sb.append("    isAdvertEnabled: ").append(toIndentedString(isAdvertEnabled)).append("\n");
    sb.append("    advertImageUrl: ").append(toIndentedString(advertImageUrl)).append("\n");
    sb.append("    advertLinkToUrl: ").append(toIndentedString(advertLinkToUrl)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("invoiceId");
    openapiFields.add("customerEmail");
    openapiFields.add("customerFirstName");
    openapiFields.add("customerLastName");
    openapiFields.add("customerUniqueId");
    openapiFields.add("addressLine1");
    openapiFields.add("addressLine2");
    openapiFields.add("addressPostCode");
    openapiFields.add("addressCity");
    openapiFields.add("addressState");
    openapiFields.add("addressCountry");
    openapiFields.add("addressCountryCode");
    openapiFields.add("invoiceNumber");
    openapiFields.add("createdOn");
    openapiFields.add("formattedAmount");
    openapiFields.add("amount");
    openapiFields.add("currency");
    openapiFields.add("status");
    openapiFields.add("subTotal");
    openapiFields.add("taxTotal");
    openapiFields.add("prorationAdjustment");
    openapiFields.add("prorationFactor");
    openapiFields.add("taxes");
    openapiFields.add("invoiceType");
    openapiFields.add("subscriptions");
    openapiFields.add("companyName");
    openapiFields.add("companyEmail");
    openapiFields.add("companyTaxNumber");
    openapiFields.add("companyDomain");
    openapiFields.add("companyPhoneNumberDialCountry");
    openapiFields.add("companyPhoneNumberDialCode");
    openapiFields.add("companyPhoneNumber");
    openapiFields.add("companyAddressLine1");
    openapiFields.add("companyAddressLine2");
    openapiFields.add("companyCity");
    openapiFields.add("companyState");
    openapiFields.add("companyPostCode");
    openapiFields.add("companyCountry");
    openapiFields.add("brandingLogo");
    openapiFields.add("brandingLogoBackgroundColor");
    openapiFields.add("brandingHighlightColor");
    openapiFields.add("supportUrl");
    openapiFields.add("cardType");
    openapiFields.add("cardLast4Digits");
    openapiFields.add("cardExpiryMonth");
    openapiFields.add("cardExpiryYear");
    openapiFields.add("refundableAmount");
    openapiFields.add("footerCompanyName");
    openapiFields.add("footerAddressLine1");
    openapiFields.add("footerAddressLine2");
    openapiFields.add("footerAddressState");
    openapiFields.add("footerAddressCity");
    openapiFields.add("footerAddressPostCode");
    openapiFields.add("footerAddressCountryISO3");
    openapiFields.add("footerEmailAddress");
    openapiFields.add("footerPhoneNumberDialCountry");
    openapiFields.add("footerPhoneNumberDialCode");
    openapiFields.add("footerPhoneNumber");
    openapiFields.add("supportContactHeading");
    openapiFields.add("supportContactContent");
    openapiFields.add("supportContactSupportUrl");
    openapiFields.add("supportContactSupportUrlButtonText");
    openapiFields.add("isAdvertEnabled");
    openapiFields.add("advertImageUrl");
    openapiFields.add("advertLinkToUrl");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to InvoiceDetailsResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!InvoiceDetailsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InvoiceDetailsResponse is not found in the empty JSON string", InvoiceDetailsResponse.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("invoiceId") != null && !jsonObj.get("invoiceId").isJsonNull()) && !jsonObj.get("invoiceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invoiceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invoiceId").toString()));
      }
      if ((jsonObj.get("customerEmail") != null && !jsonObj.get("customerEmail").isJsonNull()) && !jsonObj.get("customerEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerEmail").toString()));
      }
      if ((jsonObj.get("customerFirstName") != null && !jsonObj.get("customerFirstName").isJsonNull()) && !jsonObj.get("customerFirstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerFirstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerFirstName").toString()));
      }
      if ((jsonObj.get("customerLastName") != null && !jsonObj.get("customerLastName").isJsonNull()) && !jsonObj.get("customerLastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerLastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerLastName").toString()));
      }
      if ((jsonObj.get("customerUniqueId") != null && !jsonObj.get("customerUniqueId").isJsonNull()) && !jsonObj.get("customerUniqueId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerUniqueId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerUniqueId").toString()));
      }
      if ((jsonObj.get("addressLine1") != null && !jsonObj.get("addressLine1").isJsonNull()) && !jsonObj.get("addressLine1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine1").toString()));
      }
      if ((jsonObj.get("addressLine2") != null && !jsonObj.get("addressLine2").isJsonNull()) && !jsonObj.get("addressLine2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine2").toString()));
      }
      if ((jsonObj.get("addressPostCode") != null && !jsonObj.get("addressPostCode").isJsonNull()) && !jsonObj.get("addressPostCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressPostCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressPostCode").toString()));
      }
      if ((jsonObj.get("addressCity") != null && !jsonObj.get("addressCity").isJsonNull()) && !jsonObj.get("addressCity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressCity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressCity").toString()));
      }
      if ((jsonObj.get("addressState") != null && !jsonObj.get("addressState").isJsonNull()) && !jsonObj.get("addressState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressState").toString()));
      }
      if ((jsonObj.get("addressCountry") != null && !jsonObj.get("addressCountry").isJsonNull()) && !jsonObj.get("addressCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressCountry").toString()));
      }
      if ((jsonObj.get("addressCountryCode") != null && !jsonObj.get("addressCountryCode").isJsonNull()) && !jsonObj.get("addressCountryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressCountryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressCountryCode").toString()));
      }
      if ((jsonObj.get("invoiceNumber") != null && !jsonObj.get("invoiceNumber").isJsonNull()) && !jsonObj.get("invoiceNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invoiceNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invoiceNumber").toString()));
      }
      if ((jsonObj.get("createdOn") != null && !jsonObj.get("createdOn").isJsonNull()) && !jsonObj.get("createdOn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdOn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdOn").toString()));
      }
      if ((jsonObj.get("formattedAmount") != null && !jsonObj.get("formattedAmount").isJsonNull()) && !jsonObj.get("formattedAmount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `formattedAmount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("formattedAmount").toString()));
      }
      if ((jsonObj.get("amount") != null && !jsonObj.get("amount").isJsonNull()) && !jsonObj.get("amount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amount").toString()));
      }
      if ((jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) && !jsonObj.get("currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("subTotal") != null && !jsonObj.get("subTotal").isJsonNull()) && !jsonObj.get("subTotal").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subTotal` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subTotal").toString()));
      }
      if ((jsonObj.get("taxTotal") != null && !jsonObj.get("taxTotal").isJsonNull()) && !jsonObj.get("taxTotal").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxTotal` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxTotal").toString()));
      }
      if ((jsonObj.get("prorationAdjustment") != null && !jsonObj.get("prorationAdjustment").isJsonNull()) && !jsonObj.get("prorationAdjustment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prorationAdjustment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prorationAdjustment").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("taxes") != null && !jsonObj.get("taxes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxes` to be an array in the JSON string but got `%s`", jsonObj.get("taxes").toString()));
      }
      if ((jsonObj.get("invoiceType") != null && !jsonObj.get("invoiceType").isJsonNull()) && !jsonObj.get("invoiceType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invoiceType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invoiceType").toString()));
      }
      if (jsonObj.get("subscriptions") != null && !jsonObj.get("subscriptions").isJsonNull()) {
        JsonArray jsonArraysubscriptions = jsonObj.getAsJsonArray("subscriptions");
        if (jsonArraysubscriptions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("subscriptions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `subscriptions` to be an array in the JSON string but got `%s`", jsonObj.get("subscriptions").toString()));
          }

          // validate the optional field `subscriptions` (array)
          for (int i = 0; i < jsonArraysubscriptions.size(); i++) {
            InvoiceDetailsResponseSubscriptionsInner.validateJsonObject(jsonArraysubscriptions.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("companyName") != null && !jsonObj.get("companyName").isJsonNull()) && !jsonObj.get("companyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyName").toString()));
      }
      if ((jsonObj.get("companyEmail") != null && !jsonObj.get("companyEmail").isJsonNull()) && !jsonObj.get("companyEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyEmail").toString()));
      }
      if ((jsonObj.get("companyTaxNumber") != null && !jsonObj.get("companyTaxNumber").isJsonNull()) && !jsonObj.get("companyTaxNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyTaxNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyTaxNumber").toString()));
      }
      if ((jsonObj.get("companyDomain") != null && !jsonObj.get("companyDomain").isJsonNull()) && !jsonObj.get("companyDomain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyDomain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyDomain").toString()));
      }
      if ((jsonObj.get("companyPhoneNumberDialCountry") != null && !jsonObj.get("companyPhoneNumberDialCountry").isJsonNull()) && !jsonObj.get("companyPhoneNumberDialCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyPhoneNumberDialCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyPhoneNumberDialCountry").toString()));
      }
      if ((jsonObj.get("companyPhoneNumberDialCode") != null && !jsonObj.get("companyPhoneNumberDialCode").isJsonNull()) && !jsonObj.get("companyPhoneNumberDialCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyPhoneNumberDialCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyPhoneNumberDialCode").toString()));
      }
      if ((jsonObj.get("companyPhoneNumber") != null && !jsonObj.get("companyPhoneNumber").isJsonNull()) && !jsonObj.get("companyPhoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyPhoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyPhoneNumber").toString()));
      }
      if ((jsonObj.get("companyAddressLine1") != null && !jsonObj.get("companyAddressLine1").isJsonNull()) && !jsonObj.get("companyAddressLine1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyAddressLine1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyAddressLine1").toString()));
      }
      if ((jsonObj.get("companyAddressLine2") != null && !jsonObj.get("companyAddressLine2").isJsonNull()) && !jsonObj.get("companyAddressLine2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyAddressLine2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyAddressLine2").toString()));
      }
      if ((jsonObj.get("companyCity") != null && !jsonObj.get("companyCity").isJsonNull()) && !jsonObj.get("companyCity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyCity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyCity").toString()));
      }
      if ((jsonObj.get("companyState") != null && !jsonObj.get("companyState").isJsonNull()) && !jsonObj.get("companyState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyState").toString()));
      }
      if ((jsonObj.get("companyPostCode") != null && !jsonObj.get("companyPostCode").isJsonNull()) && !jsonObj.get("companyPostCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyPostCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyPostCode").toString()));
      }
      if ((jsonObj.get("companyCountry") != null && !jsonObj.get("companyCountry").isJsonNull()) && !jsonObj.get("companyCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyCountry").toString()));
      }
      if ((jsonObj.get("brandingLogo") != null && !jsonObj.get("brandingLogo").isJsonNull()) && !jsonObj.get("brandingLogo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brandingLogo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brandingLogo").toString()));
      }
      if ((jsonObj.get("brandingLogoBackgroundColor") != null && !jsonObj.get("brandingLogoBackgroundColor").isJsonNull()) && !jsonObj.get("brandingLogoBackgroundColor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brandingLogoBackgroundColor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brandingLogoBackgroundColor").toString()));
      }
      if ((jsonObj.get("brandingHighlightColor") != null && !jsonObj.get("brandingHighlightColor").isJsonNull()) && !jsonObj.get("brandingHighlightColor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brandingHighlightColor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brandingHighlightColor").toString()));
      }
      if ((jsonObj.get("supportUrl") != null && !jsonObj.get("supportUrl").isJsonNull()) && !jsonObj.get("supportUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supportUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supportUrl").toString()));
      }
      if ((jsonObj.get("cardType") != null && !jsonObj.get("cardType").isJsonNull()) && !jsonObj.get("cardType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cardType").toString()));
      }
      if ((jsonObj.get("cardLast4Digits") != null && !jsonObj.get("cardLast4Digits").isJsonNull()) && !jsonObj.get("cardLast4Digits").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardLast4Digits` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cardLast4Digits").toString()));
      }
      if ((jsonObj.get("cardExpiryMonth") != null && !jsonObj.get("cardExpiryMonth").isJsonNull()) && !jsonObj.get("cardExpiryMonth").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardExpiryMonth` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cardExpiryMonth").toString()));
      }
      if ((jsonObj.get("cardExpiryYear") != null && !jsonObj.get("cardExpiryYear").isJsonNull()) && !jsonObj.get("cardExpiryYear").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardExpiryYear` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cardExpiryYear").toString()));
      }
      if ((jsonObj.get("refundableAmount") != null && !jsonObj.get("refundableAmount").isJsonNull()) && !jsonObj.get("refundableAmount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `refundableAmount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("refundableAmount").toString()));
      }
      if ((jsonObj.get("footerCompanyName") != null && !jsonObj.get("footerCompanyName").isJsonNull()) && !jsonObj.get("footerCompanyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `footerCompanyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("footerCompanyName").toString()));
      }
      if ((jsonObj.get("footerAddressLine1") != null && !jsonObj.get("footerAddressLine1").isJsonNull()) && !jsonObj.get("footerAddressLine1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `footerAddressLine1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("footerAddressLine1").toString()));
      }
      if ((jsonObj.get("footerAddressLine2") != null && !jsonObj.get("footerAddressLine2").isJsonNull()) && !jsonObj.get("footerAddressLine2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `footerAddressLine2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("footerAddressLine2").toString()));
      }
      if ((jsonObj.get("footerAddressState") != null && !jsonObj.get("footerAddressState").isJsonNull()) && !jsonObj.get("footerAddressState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `footerAddressState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("footerAddressState").toString()));
      }
      if ((jsonObj.get("footerAddressCity") != null && !jsonObj.get("footerAddressCity").isJsonNull()) && !jsonObj.get("footerAddressCity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `footerAddressCity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("footerAddressCity").toString()));
      }
      if ((jsonObj.get("footerAddressPostCode") != null && !jsonObj.get("footerAddressPostCode").isJsonNull()) && !jsonObj.get("footerAddressPostCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `footerAddressPostCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("footerAddressPostCode").toString()));
      }
      if ((jsonObj.get("footerAddressCountryISO3") != null && !jsonObj.get("footerAddressCountryISO3").isJsonNull()) && !jsonObj.get("footerAddressCountryISO3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `footerAddressCountryISO3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("footerAddressCountryISO3").toString()));
      }
      if ((jsonObj.get("footerEmailAddress") != null && !jsonObj.get("footerEmailAddress").isJsonNull()) && !jsonObj.get("footerEmailAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `footerEmailAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("footerEmailAddress").toString()));
      }
      if ((jsonObj.get("footerPhoneNumberDialCountry") != null && !jsonObj.get("footerPhoneNumberDialCountry").isJsonNull()) && !jsonObj.get("footerPhoneNumberDialCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `footerPhoneNumberDialCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("footerPhoneNumberDialCountry").toString()));
      }
      if ((jsonObj.get("footerPhoneNumberDialCode") != null && !jsonObj.get("footerPhoneNumberDialCode").isJsonNull()) && !jsonObj.get("footerPhoneNumberDialCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `footerPhoneNumberDialCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("footerPhoneNumberDialCode").toString()));
      }
      if ((jsonObj.get("footerPhoneNumber") != null && !jsonObj.get("footerPhoneNumber").isJsonNull()) && !jsonObj.get("footerPhoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `footerPhoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("footerPhoneNumber").toString()));
      }
      if ((jsonObj.get("supportContactHeading") != null && !jsonObj.get("supportContactHeading").isJsonNull()) && !jsonObj.get("supportContactHeading").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supportContactHeading` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supportContactHeading").toString()));
      }
      if ((jsonObj.get("supportContactContent") != null && !jsonObj.get("supportContactContent").isJsonNull()) && !jsonObj.get("supportContactContent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supportContactContent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supportContactContent").toString()));
      }
      if ((jsonObj.get("supportContactSupportUrl") != null && !jsonObj.get("supportContactSupportUrl").isJsonNull()) && !jsonObj.get("supportContactSupportUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supportContactSupportUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supportContactSupportUrl").toString()));
      }
      if ((jsonObj.get("supportContactSupportUrlButtonText") != null && !jsonObj.get("supportContactSupportUrlButtonText").isJsonNull()) && !jsonObj.get("supportContactSupportUrlButtonText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supportContactSupportUrlButtonText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supportContactSupportUrlButtonText").toString()));
      }
      if ((jsonObj.get("isAdvertEnabled") != null && !jsonObj.get("isAdvertEnabled").isJsonNull()) && !jsonObj.get("isAdvertEnabled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `isAdvertEnabled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("isAdvertEnabled").toString()));
      }
      if ((jsonObj.get("advertImageUrl") != null && !jsonObj.get("advertImageUrl").isJsonNull()) && !jsonObj.get("advertImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `advertImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("advertImageUrl").toString()));
      }
      if ((jsonObj.get("advertLinkToUrl") != null && !jsonObj.get("advertLinkToUrl").isJsonNull()) && !jsonObj.get("advertLinkToUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `advertLinkToUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("advertLinkToUrl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InvoiceDetailsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InvoiceDetailsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InvoiceDetailsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InvoiceDetailsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<InvoiceDetailsResponse>() {
           @Override
           public void write(JsonWriter out, InvoiceDetailsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public InvoiceDetailsResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             InvoiceDetailsResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of InvoiceDetailsResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of InvoiceDetailsResponse
  * @throws IOException if the JSON string is invalid with respect to InvoiceDetailsResponse
  */
  public static InvoiceDetailsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InvoiceDetailsResponse.class);
  }

 /**
  * Convert an instance of InvoiceDetailsResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

