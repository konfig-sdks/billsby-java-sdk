/*
 * Billsby API
 * Billsby is a feature-rich \"Saas\" recurring payment platform, ranked as the leading subscription billing software by G2.  Billsby is designed to ensure customers can go live quickly, often within 1-2 hours.  To help facilitate this process we have a team of friendly knowledgeable advisors ready to help your business go live.      Billsby specializes in providing great customer service at an affordable price point - our technology is rated No 1 on G2 by our customers.  If you are a developer creating a solution for your customer, Billsby has a friendly well-documented API.  The Billsby team are here to provide support to developers in order to ensure a smooth migration or new system build.   Why not book a call, talk through your Billing requirements and we can let you know how we can help you transform your business..
 *
 * The version of the OpenAPI document: 1.3.5
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * SubscriptionListSubscriptionsResponseResultsInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class SubscriptionListSubscriptionsResponseResultsInner {
  public static final String SERIALIZED_NAME_SUBSCRIPTION_ID = "subscriptionId";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_ID)
  private Integer subscriptionId = 0;

  public static final String SERIALIZED_NAME_SUBSCRIPTION_UNIQUE_I_D = "subscriptionUniqueID";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_UNIQUE_I_D)
  private String subscriptionUniqueID;

  public static final String SERIALIZED_NAME_CUSTOMER_ID = "customerId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ID)
  private Integer customerId = 0;

  public static final String SERIALIZED_NAME_CUSTOMER_UNIQUE_ID = "customerUniqueId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_UNIQUE_ID)
  private String customerUniqueId;

  public static final String SERIALIZED_NAME_CUSTOMER_EMAIL = "customerEmail";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_EMAIL)
  private String customerEmail;

  public static final String SERIALIZED_NAME_CUSTOMER_FULLNAME = "customerFullname";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_FULLNAME)
  private String customerFullname;

  public static final String SERIALIZED_NAME_PLAN_ID = "planId";
  @SerializedName(SERIALIZED_NAME_PLAN_ID)
  private String planId;

  public static final String SERIALIZED_NAME_PLAN_NAME = "planName";
  @SerializedName(SERIALIZED_NAME_PLAN_NAME)
  private String planName;

  public static final String SERIALIZED_NAME_PRODUCT_ID = "productId";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  private String productId;

  public static final String SERIALIZED_NAME_PRODUCT_NAME = "productName";
  @SerializedName(SERIALIZED_NAME_PRODUCT_NAME)
  private String productName;

  public static final String SERIALIZED_NAME_CREATED_ON = "createdOn";
  @SerializedName(SERIALIZED_NAME_CREATED_ON)
  private String createdOn;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_IS_IN_FREE_TRIAL = "isInFreeTrial";
  @SerializedName(SERIALIZED_NAME_IS_IN_FREE_TRIAL)
  private Boolean isInFreeTrial = true;

  public SubscriptionListSubscriptionsResponseResultsInner() {
  }

  public SubscriptionListSubscriptionsResponseResultsInner subscriptionId(Integer subscriptionId) {
    
    
    
    
    this.subscriptionId = subscriptionId;
    return this;
  }

   /**
   * Get subscriptionId
   * @return subscriptionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10", value = "")

  public Integer getSubscriptionId() {
    return subscriptionId;
  }


  public void setSubscriptionId(Integer subscriptionId) {
    
    
    
    this.subscriptionId = subscriptionId;
  }


  public SubscriptionListSubscriptionsResponseResultsInner subscriptionUniqueID(String subscriptionUniqueID) {
    
    
    
    
    this.subscriptionUniqueID = subscriptionUniqueID;
    return this;
  }

   /**
   * Get subscriptionUniqueID
   * @return subscriptionUniqueID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "GAFD660", value = "")

  public String getSubscriptionUniqueID() {
    return subscriptionUniqueID;
  }


  public void setSubscriptionUniqueID(String subscriptionUniqueID) {
    
    
    
    this.subscriptionUniqueID = subscriptionUniqueID;
  }


  public SubscriptionListSubscriptionsResponseResultsInner customerId(Integer customerId) {
    
    
    
    
    this.customerId = customerId;
    return this;
  }

   /**
   * Get customerId
   * @return customerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10", value = "")

  public Integer getCustomerId() {
    return customerId;
  }


  public void setCustomerId(Integer customerId) {
    
    
    
    this.customerId = customerId;
  }


  public SubscriptionListSubscriptionsResponseResultsInner customerUniqueId(String customerUniqueId) {
    
    
    
    
    this.customerUniqueId = customerUniqueId;
    return this;
  }

   /**
   * Get customerUniqueId
   * @return customerUniqueId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "VKQRJFLZNV", value = "")

  public String getCustomerUniqueId() {
    return customerUniqueId;
  }


  public void setCustomerUniqueId(String customerUniqueId) {
    
    
    
    this.customerUniqueId = customerUniqueId;
  }


  public SubscriptionListSubscriptionsResponseResultsInner customerEmail(String customerEmail) {
    
    
    
    
    this.customerEmail = customerEmail;
    return this;
  }

   /**
   * Get customerEmail
   * @return customerEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "maryf@mistimail.com", value = "")

  public String getCustomerEmail() {
    return customerEmail;
  }


  public void setCustomerEmail(String customerEmail) {
    
    
    
    this.customerEmail = customerEmail;
  }


  public SubscriptionListSubscriptionsResponseResultsInner customerFullname(String customerFullname) {
    
    
    
    
    this.customerFullname = customerFullname;
    return this;
  }

   /**
   * Get customerFullname
   * @return customerFullname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Mary", value = "")

  public String getCustomerFullname() {
    return customerFullname;
  }


  public void setCustomerFullname(String customerFullname) {
    
    
    
    this.customerFullname = customerFullname;
  }


  public SubscriptionListSubscriptionsResponseResultsInner planId(String planId) {
    
    
    
    
    this.planId = planId;
    return this;
  }

   /**
   * Get planId
   * @return planId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "82", value = "")

  public String getPlanId() {
    return planId;
  }


  public void setPlanId(String planId) {
    
    
    
    this.planId = planId;
  }


  public SubscriptionListSubscriptionsResponseResultsInner planName(String planName) {
    
    
    
    
    this.planName = planName;
    return this;
  }

   /**
   * Get planName
   * @return planName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Premium", value = "")

  public String getPlanName() {
    return planName;
  }


  public void setPlanName(String planName) {
    
    
    
    this.planName = planName;
  }


  public SubscriptionListSubscriptionsResponseResultsInner productId(String productId) {
    
    
    
    
    this.productId = productId;
    return this;
  }

   /**
   * Get productId
   * @return productId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "44", value = "")

  public String getProductId() {
    return productId;
  }


  public void setProductId(String productId) {
    
    
    
    this.productId = productId;
  }


  public SubscriptionListSubscriptionsResponseResultsInner productName(String productName) {
    
    
    
    
    this.productName = productName;
    return this;
  }

   /**
   * Get productName
   * @return productName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Plus", value = "")

  public String getProductName() {
    return productName;
  }


  public void setProductName(String productName) {
    
    
    
    this.productName = productName;
  }


  public SubscriptionListSubscriptionsResponseResultsInner createdOn(String createdOn) {
    
    
    
    
    this.createdOn = createdOn;
    return this;
  }

   /**
   * Get createdOn
   * @return createdOn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2019-08-29T09:40:27.590Z", value = "")

  public String getCreatedOn() {
    return createdOn;
  }


  public void setCreatedOn(String createdOn) {
    
    
    
    this.createdOn = createdOn;
  }


  public SubscriptionListSubscriptionsResponseResultsInner status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Active", value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public SubscriptionListSubscriptionsResponseResultsInner isInFreeTrial(Boolean isInFreeTrial) {
    
    
    
    
    this.isInFreeTrial = isInFreeTrial;
    return this;
  }

   /**
   * Get isInFreeTrial
   * @return isInFreeTrial
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getIsInFreeTrial() {
    return isInFreeTrial;
  }


  public void setIsInFreeTrial(Boolean isInFreeTrial) {
    
    
    
    this.isInFreeTrial = isInFreeTrial;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the SubscriptionListSubscriptionsResponseResultsInner instance itself
   */
  public SubscriptionListSubscriptionsResponseResultsInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubscriptionListSubscriptionsResponseResultsInner subscriptionListSubscriptionsResponseResultsInner = (SubscriptionListSubscriptionsResponseResultsInner) o;
    return Objects.equals(this.subscriptionId, subscriptionListSubscriptionsResponseResultsInner.subscriptionId) &&
        Objects.equals(this.subscriptionUniqueID, subscriptionListSubscriptionsResponseResultsInner.subscriptionUniqueID) &&
        Objects.equals(this.customerId, subscriptionListSubscriptionsResponseResultsInner.customerId) &&
        Objects.equals(this.customerUniqueId, subscriptionListSubscriptionsResponseResultsInner.customerUniqueId) &&
        Objects.equals(this.customerEmail, subscriptionListSubscriptionsResponseResultsInner.customerEmail) &&
        Objects.equals(this.customerFullname, subscriptionListSubscriptionsResponseResultsInner.customerFullname) &&
        Objects.equals(this.planId, subscriptionListSubscriptionsResponseResultsInner.planId) &&
        Objects.equals(this.planName, subscriptionListSubscriptionsResponseResultsInner.planName) &&
        Objects.equals(this.productId, subscriptionListSubscriptionsResponseResultsInner.productId) &&
        Objects.equals(this.productName, subscriptionListSubscriptionsResponseResultsInner.productName) &&
        Objects.equals(this.createdOn, subscriptionListSubscriptionsResponseResultsInner.createdOn) &&
        Objects.equals(this.status, subscriptionListSubscriptionsResponseResultsInner.status) &&
        Objects.equals(this.isInFreeTrial, subscriptionListSubscriptionsResponseResultsInner.isInFreeTrial)&&
        Objects.equals(this.additionalProperties, subscriptionListSubscriptionsResponseResultsInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subscriptionId, subscriptionUniqueID, customerId, customerUniqueId, customerEmail, customerFullname, planId, planName, productId, productName, createdOn, status, isInFreeTrial, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubscriptionListSubscriptionsResponseResultsInner {\n");
    sb.append("    subscriptionId: ").append(toIndentedString(subscriptionId)).append("\n");
    sb.append("    subscriptionUniqueID: ").append(toIndentedString(subscriptionUniqueID)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    customerUniqueId: ").append(toIndentedString(customerUniqueId)).append("\n");
    sb.append("    customerEmail: ").append(toIndentedString(customerEmail)).append("\n");
    sb.append("    customerFullname: ").append(toIndentedString(customerFullname)).append("\n");
    sb.append("    planId: ").append(toIndentedString(planId)).append("\n");
    sb.append("    planName: ").append(toIndentedString(planName)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    isInFreeTrial: ").append(toIndentedString(isInFreeTrial)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("subscriptionId");
    openapiFields.add("subscriptionUniqueID");
    openapiFields.add("customerId");
    openapiFields.add("customerUniqueId");
    openapiFields.add("customerEmail");
    openapiFields.add("customerFullname");
    openapiFields.add("planId");
    openapiFields.add("planName");
    openapiFields.add("productId");
    openapiFields.add("productName");
    openapiFields.add("createdOn");
    openapiFields.add("status");
    openapiFields.add("isInFreeTrial");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SubscriptionListSubscriptionsResponseResultsInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!SubscriptionListSubscriptionsResponseResultsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SubscriptionListSubscriptionsResponseResultsInner is not found in the empty JSON string", SubscriptionListSubscriptionsResponseResultsInner.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("subscriptionUniqueID") != null && !jsonObj.get("subscriptionUniqueID").isJsonNull()) && !jsonObj.get("subscriptionUniqueID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subscriptionUniqueID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subscriptionUniqueID").toString()));
      }
      if ((jsonObj.get("customerUniqueId") != null && !jsonObj.get("customerUniqueId").isJsonNull()) && !jsonObj.get("customerUniqueId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerUniqueId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerUniqueId").toString()));
      }
      if ((jsonObj.get("customerEmail") != null && !jsonObj.get("customerEmail").isJsonNull()) && !jsonObj.get("customerEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerEmail").toString()));
      }
      if ((jsonObj.get("customerFullname") != null && !jsonObj.get("customerFullname").isJsonNull()) && !jsonObj.get("customerFullname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerFullname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerFullname").toString()));
      }
      if ((jsonObj.get("planId") != null && !jsonObj.get("planId").isJsonNull()) && !jsonObj.get("planId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `planId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("planId").toString()));
      }
      if ((jsonObj.get("planName") != null && !jsonObj.get("planName").isJsonNull()) && !jsonObj.get("planName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `planName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("planName").toString()));
      }
      if ((jsonObj.get("productId") != null && !jsonObj.get("productId").isJsonNull()) && !jsonObj.get("productId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productId").toString()));
      }
      if ((jsonObj.get("productName") != null && !jsonObj.get("productName").isJsonNull()) && !jsonObj.get("productName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productName").toString()));
      }
      if ((jsonObj.get("createdOn") != null && !jsonObj.get("createdOn").isJsonNull()) && !jsonObj.get("createdOn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdOn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdOn").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SubscriptionListSubscriptionsResponseResultsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SubscriptionListSubscriptionsResponseResultsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SubscriptionListSubscriptionsResponseResultsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SubscriptionListSubscriptionsResponseResultsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<SubscriptionListSubscriptionsResponseResultsInner>() {
           @Override
           public void write(JsonWriter out, SubscriptionListSubscriptionsResponseResultsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public SubscriptionListSubscriptionsResponseResultsInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             SubscriptionListSubscriptionsResponseResultsInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SubscriptionListSubscriptionsResponseResultsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SubscriptionListSubscriptionsResponseResultsInner
  * @throws IOException if the JSON string is invalid with respect to SubscriptionListSubscriptionsResponseResultsInner
  */
  public static SubscriptionListSubscriptionsResponseResultsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SubscriptionListSubscriptionsResponseResultsInner.class);
  }

 /**
  * Convert an instance of SubscriptionListSubscriptionsResponseResultsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

