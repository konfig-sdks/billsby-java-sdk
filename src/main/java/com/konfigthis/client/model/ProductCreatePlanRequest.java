/*
 * Billsby API
 * Billsby is a feature-rich \"Saas\" recurring payment platform, ranked as the leading subscription billing software by G2.  Billsby is designed to ensure customers can go live quickly, often within 1-2 hours.  To help facilitate this process we have a team of friendly knowledgeable advisors ready to help your business go live.      Billsby specializes in providing great customer service at an affordable price point - our technology is rated No 1 on G2 by our customers.  If you are a developer creating a solution for your customer, Billsby has a friendly well-documented API.  The Billsby team are here to provide support to developers in order to ensure a smooth migration or new system build.   Why not book a call, talk through your Billing requirements and we can let you know how we can help you transform your business..
 *
 * The version of the OpenAPI document: 1.3.5
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ProductCreatePlanRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ProductCreatePlanRequest {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_PRICING_MODEL = "pricingModel";
  @SerializedName(SERIALIZED_NAME_PRICING_MODEL)
  private Integer pricingModel;

  public static final String SERIALIZED_NAME_FEATURE_TAGS = "featureTags";
  @SerializedName(SERIALIZED_NAME_FEATURE_TAGS)
  private String featureTags;

  public static final String SERIALIZED_NAME_VISIBILITY = "visibility";
  @SerializedName(SERIALIZED_NAME_VISIBILITY)
  private Integer visibility;

  public static final String SERIALIZED_NAME_REDIRECT_URL = "redirectUrl";
  @SerializedName(SERIALIZED_NAME_REDIRECT_URL)
  private String redirectUrl;

  public static final String SERIALIZED_NAME_ALERT_EMAIL = "alertEmail";
  @SerializedName(SERIALIZED_NAME_ALERT_EMAIL)
  private String alertEmail;

  public ProductCreatePlanRequest() {
  }

  public ProductCreatePlanRequest description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * The description of the plan
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The description of the plan")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public ProductCreatePlanRequest name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * The name of the plan you want to add
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the plan you want to add")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public ProductCreatePlanRequest displayName(String displayName) {
    
    
    
    
    this.displayName = displayName;
    return this;
  }

   /**
   * The display name of the plan
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The display name of the plan")

  public String getDisplayName() {
    return displayName;
  }


  public void setDisplayName(String displayName) {
    
    
    
    this.displayName = displayName;
  }


  public ProductCreatePlanRequest pricingModel(Integer pricingModel) {
    
    
    
    
    this.pricingModel = pricingModel;
    return this;
  }

   /**
   * The type of pricing model for the plan; FlatFee &#x3D; 1, PerUnit &#x3D; 2, Reserved &#x3D; 3, Tiered &#x3D; 4, Volume &#x3D; 5, Ranged &#x3D; 6
   * @return pricingModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of pricing model for the plan; FlatFee = 1, PerUnit = 2, Reserved = 3, Tiered = 4, Volume = 5, Ranged = 6")

  public Integer getPricingModel() {
    return pricingModel;
  }


  public void setPricingModel(Integer pricingModel) {
    
    
    
    this.pricingModel = pricingModel;
  }


  public ProductCreatePlanRequest featureTags(String featureTags) {
    
    
    
    
    this.featureTags = featureTags;
    return this;
  }

   /**
   * Any feature tags you want to add to the plan
   * @return featureTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Any feature tags you want to add to the plan")

  public String getFeatureTags() {
    return featureTags;
  }


  public void setFeatureTags(String featureTags) {
    
    
    
    this.featureTags = featureTags;
  }


  public ProductCreatePlanRequest visibility(Integer visibility) {
    
    
    
    
    this.visibility = visibility;
    return this;
  }

   /**
   * The type of visibility of each plan; public, hidden and on-sale. Available values: 0, 1, 2, 3 (Public&#x3D;0, Hidden&#x3D;1, Internal&#x3D;2, OffSale&#x3D;3)
   * @return visibility
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of visibility of each plan; public, hidden and on-sale. Available values: 0, 1, 2, 3 (Public=0, Hidden=1, Internal=2, OffSale=3)")

  public Integer getVisibility() {
    return visibility;
  }


  public void setVisibility(Integer visibility) {
    
    
    
    this.visibility = visibility;
  }


  public ProductCreatePlanRequest redirectUrl(String redirectUrl) {
    
    
    
    
    this.redirectUrl = redirectUrl;
    return this;
  }

   /**
   * The URL you want to redirect your customers to when they have completed the checkout flow
   * @return redirectUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The URL you want to redirect your customers to when they have completed the checkout flow")

  public String getRedirectUrl() {
    return redirectUrl;
  }


  public void setRedirectUrl(String redirectUrl) {
    
    
    
    this.redirectUrl = redirectUrl;
  }


  public ProductCreatePlanRequest alertEmail(String alertEmail) {
    
    
    
    
    this.alertEmail = alertEmail;
    return this;
  }

   /**
   * The email you would like to receive an alert when a customer signs up for this plan
   * @return alertEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The email you would like to receive an alert when a customer signs up for this plan")

  public String getAlertEmail() {
    return alertEmail;
  }


  public void setAlertEmail(String alertEmail) {
    
    
    
    this.alertEmail = alertEmail;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ProductCreatePlanRequest instance itself
   */
  public ProductCreatePlanRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductCreatePlanRequest productCreatePlanRequest = (ProductCreatePlanRequest) o;
    return Objects.equals(this.description, productCreatePlanRequest.description) &&
        Objects.equals(this.name, productCreatePlanRequest.name) &&
        Objects.equals(this.displayName, productCreatePlanRequest.displayName) &&
        Objects.equals(this.pricingModel, productCreatePlanRequest.pricingModel) &&
        Objects.equals(this.featureTags, productCreatePlanRequest.featureTags) &&
        Objects.equals(this.visibility, productCreatePlanRequest.visibility) &&
        Objects.equals(this.redirectUrl, productCreatePlanRequest.redirectUrl) &&
        Objects.equals(this.alertEmail, productCreatePlanRequest.alertEmail)&&
        Objects.equals(this.additionalProperties, productCreatePlanRequest.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, name, displayName, pricingModel, featureTags, visibility, redirectUrl, alertEmail, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductCreatePlanRequest {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    pricingModel: ").append(toIndentedString(pricingModel)).append("\n");
    sb.append("    featureTags: ").append(toIndentedString(featureTags)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    redirectUrl: ").append(toIndentedString(redirectUrl)).append("\n");
    sb.append("    alertEmail: ").append(toIndentedString(alertEmail)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("name");
    openapiFields.add("displayName");
    openapiFields.add("pricingModel");
    openapiFields.add("featureTags");
    openapiFields.add("visibility");
    openapiFields.add("redirectUrl");
    openapiFields.add("alertEmail");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ProductCreatePlanRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ProductCreatePlanRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProductCreatePlanRequest is not found in the empty JSON string", ProductCreatePlanRequest.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("featureTags") != null && !jsonObj.get("featureTags").isJsonNull()) && !jsonObj.get("featureTags").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `featureTags` to be a primitive type in the JSON string but got `%s`", jsonObj.get("featureTags").toString()));
      }
      if ((jsonObj.get("redirectUrl") != null && !jsonObj.get("redirectUrl").isJsonNull()) && !jsonObj.get("redirectUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `redirectUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("redirectUrl").toString()));
      }
      if ((jsonObj.get("alertEmail") != null && !jsonObj.get("alertEmail").isJsonNull()) && !jsonObj.get("alertEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alertEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alertEmail").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProductCreatePlanRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProductCreatePlanRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProductCreatePlanRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProductCreatePlanRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<ProductCreatePlanRequest>() {
           @Override
           public void write(JsonWriter out, ProductCreatePlanRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ProductCreatePlanRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ProductCreatePlanRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ProductCreatePlanRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ProductCreatePlanRequest
  * @throws IOException if the JSON string is invalid with respect to ProductCreatePlanRequest
  */
  public static ProductCreatePlanRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProductCreatePlanRequest.class);
  }

 /**
  * Convert an instance of ProductCreatePlanRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

