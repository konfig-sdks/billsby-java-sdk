/*
 * Billsby API
 * Billsby is a feature-rich \"Saas\" recurring payment platform, ranked as the leading subscription billing software by G2.  Billsby is designed to ensure customers can go live quickly, often within 1-2 hours.  To help facilitate this process we have a team of friendly knowledgeable advisors ready to help your business go live.      Billsby specializes in providing great customer service at an affordable price point - our technology is rated No 1 on G2 by our customers.  If you are a developer creating a solution for your customer, Billsby has a friendly well-documented API.  The Billsby team are here to provide support to developers in order to ensure a smooth migration or new system build.   Why not book a call, talk through your Billing requirements and we can let you know how we can help you transform your business..
 *
 * The version of the OpenAPI document: 1.3.5
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * CreditnoteListResponseResultsInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class CreditnoteListResponseResultsInner {
  public static final String SERIALIZED_NAME_CREDIT_NOTE_ID = "creditNoteId";
  @SerializedName(SERIALIZED_NAME_CREDIT_NOTE_ID)
  private Integer creditNoteId = 0;

  public static final String SERIALIZED_NAME_CREDIT_NOTE_UNIQUE_ID = "creditNoteUniqueId";
  @SerializedName(SERIALIZED_NAME_CREDIT_NOTE_UNIQUE_ID)
  private String creditNoteUniqueId;

  public static final String SERIALIZED_NAME_CUSTOMER_ID = "customerId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ID)
  private Integer customerId = 0;

  public static final String SERIALIZED_NAME_CUSTOMER_UNIQUE_ID = "customerUniqueId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_UNIQUE_ID)
  private String customerUniqueId;

  public static final String SERIALIZED_NAME_CUSTOMER_FIRST_NAME = "customerFirstName";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_FIRST_NAME)
  private String customerFirstName;

  public static final String SERIALIZED_NAME_CUSTOMER_LAST_NAME = "customerLastName";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_LAST_NAME)
  private String customerLastName;

  public static final String SERIALIZED_NAME_CUSTOMER_FULL_NAME = "customerFullName";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_FULL_NAME)
  private String customerFullName;

  public static final String SERIALIZED_NAME_CREATED_ON = "createdOn";
  @SerializedName(SERIALIZED_NAME_CREATED_ON)
  private String createdOn;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private String amount;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public CreditnoteListResponseResultsInner() {
  }

  public CreditnoteListResponseResultsInner creditNoteId(Integer creditNoteId) {
    
    
    
    
    this.creditNoteId = creditNoteId;
    return this;
  }

   /**
   * Get creditNoteId
   * @return creditNoteId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Integer getCreditNoteId() {
    return creditNoteId;
  }


  public void setCreditNoteId(Integer creditNoteId) {
    
    
    
    this.creditNoteId = creditNoteId;
  }


  public CreditnoteListResponseResultsInner creditNoteUniqueId(String creditNoteUniqueId) {
    
    
    
    
    this.creditNoteUniqueId = creditNoteUniqueId;
    return this;
  }

   /**
   * Get creditNoteUniqueId
   * @return creditNoteUniqueId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getCreditNoteUniqueId() {
    return creditNoteUniqueId;
  }


  public void setCreditNoteUniqueId(String creditNoteUniqueId) {
    
    
    
    this.creditNoteUniqueId = creditNoteUniqueId;
  }


  public CreditnoteListResponseResultsInner customerId(Integer customerId) {
    
    
    
    
    this.customerId = customerId;
    return this;
  }

   /**
   * Get customerId
   * @return customerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Integer getCustomerId() {
    return customerId;
  }


  public void setCustomerId(Integer customerId) {
    
    
    
    this.customerId = customerId;
  }


  public CreditnoteListResponseResultsInner customerUniqueId(String customerUniqueId) {
    
    
    
    
    this.customerUniqueId = customerUniqueId;
    return this;
  }

   /**
   * Get customerUniqueId
   * @return customerUniqueId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getCustomerUniqueId() {
    return customerUniqueId;
  }


  public void setCustomerUniqueId(String customerUniqueId) {
    
    
    
    this.customerUniqueId = customerUniqueId;
  }


  public CreditnoteListResponseResultsInner customerFirstName(String customerFirstName) {
    
    
    
    
    this.customerFirstName = customerFirstName;
    return this;
  }

   /**
   * Get customerFirstName
   * @return customerFirstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getCustomerFirstName() {
    return customerFirstName;
  }


  public void setCustomerFirstName(String customerFirstName) {
    
    
    
    this.customerFirstName = customerFirstName;
  }


  public CreditnoteListResponseResultsInner customerLastName(String customerLastName) {
    
    
    
    
    this.customerLastName = customerLastName;
    return this;
  }

   /**
   * Get customerLastName
   * @return customerLastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getCustomerLastName() {
    return customerLastName;
  }


  public void setCustomerLastName(String customerLastName) {
    
    
    
    this.customerLastName = customerLastName;
  }


  public CreditnoteListResponseResultsInner customerFullName(String customerFullName) {
    
    
    
    
    this.customerFullName = customerFullName;
    return this;
  }

   /**
   * Get customerFullName
   * @return customerFullName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getCustomerFullName() {
    return customerFullName;
  }


  public void setCustomerFullName(String customerFullName) {
    
    
    
    this.customerFullName = customerFullName;
  }


  public CreditnoteListResponseResultsInner createdOn(String createdOn) {
    
    
    
    
    this.createdOn = createdOn;
    return this;
  }

   /**
   * Get createdOn
   * @return createdOn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-04-30T10:22:14.547Z", value = "")

  public String getCreatedOn() {
    return createdOn;
  }


  public void setCreatedOn(String createdOn) {
    
    
    
    this.createdOn = createdOn;
  }


  public CreditnoteListResponseResultsInner amount(String amount) {
    
    
    
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getAmount() {
    return amount;
  }


  public void setAmount(String amount) {
    
    
    
    this.amount = amount;
  }


  public CreditnoteListResponseResultsInner status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public CreditnoteListResponseResultsInner currency(String currency) {
    
    
    
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    
    
    
    this.currency = currency;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CreditnoteListResponseResultsInner instance itself
   */
  public CreditnoteListResponseResultsInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreditnoteListResponseResultsInner creditnoteListResponseResultsInner = (CreditnoteListResponseResultsInner) o;
    return Objects.equals(this.creditNoteId, creditnoteListResponseResultsInner.creditNoteId) &&
        Objects.equals(this.creditNoteUniqueId, creditnoteListResponseResultsInner.creditNoteUniqueId) &&
        Objects.equals(this.customerId, creditnoteListResponseResultsInner.customerId) &&
        Objects.equals(this.customerUniqueId, creditnoteListResponseResultsInner.customerUniqueId) &&
        Objects.equals(this.customerFirstName, creditnoteListResponseResultsInner.customerFirstName) &&
        Objects.equals(this.customerLastName, creditnoteListResponseResultsInner.customerLastName) &&
        Objects.equals(this.customerFullName, creditnoteListResponseResultsInner.customerFullName) &&
        Objects.equals(this.createdOn, creditnoteListResponseResultsInner.createdOn) &&
        Objects.equals(this.amount, creditnoteListResponseResultsInner.amount) &&
        Objects.equals(this.status, creditnoteListResponseResultsInner.status) &&
        Objects.equals(this.currency, creditnoteListResponseResultsInner.currency)&&
        Objects.equals(this.additionalProperties, creditnoteListResponseResultsInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creditNoteId, creditNoteUniqueId, customerId, customerUniqueId, customerFirstName, customerLastName, customerFullName, createdOn, amount, status, currency, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreditnoteListResponseResultsInner {\n");
    sb.append("    creditNoteId: ").append(toIndentedString(creditNoteId)).append("\n");
    sb.append("    creditNoteUniqueId: ").append(toIndentedString(creditNoteUniqueId)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    customerUniqueId: ").append(toIndentedString(customerUniqueId)).append("\n");
    sb.append("    customerFirstName: ").append(toIndentedString(customerFirstName)).append("\n");
    sb.append("    customerLastName: ").append(toIndentedString(customerLastName)).append("\n");
    sb.append("    customerFullName: ").append(toIndentedString(customerFullName)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("creditNoteId");
    openapiFields.add("creditNoteUniqueId");
    openapiFields.add("customerId");
    openapiFields.add("customerUniqueId");
    openapiFields.add("customerFirstName");
    openapiFields.add("customerLastName");
    openapiFields.add("customerFullName");
    openapiFields.add("createdOn");
    openapiFields.add("amount");
    openapiFields.add("status");
    openapiFields.add("currency");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CreditnoteListResponseResultsInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CreditnoteListResponseResultsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreditnoteListResponseResultsInner is not found in the empty JSON string", CreditnoteListResponseResultsInner.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("creditNoteUniqueId") != null && !jsonObj.get("creditNoteUniqueId").isJsonNull()) && !jsonObj.get("creditNoteUniqueId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creditNoteUniqueId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creditNoteUniqueId").toString()));
      }
      if ((jsonObj.get("customerUniqueId") != null && !jsonObj.get("customerUniqueId").isJsonNull()) && !jsonObj.get("customerUniqueId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerUniqueId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerUniqueId").toString()));
      }
      if ((jsonObj.get("customerFirstName") != null && !jsonObj.get("customerFirstName").isJsonNull()) && !jsonObj.get("customerFirstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerFirstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerFirstName").toString()));
      }
      if ((jsonObj.get("customerLastName") != null && !jsonObj.get("customerLastName").isJsonNull()) && !jsonObj.get("customerLastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerLastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerLastName").toString()));
      }
      if ((jsonObj.get("customerFullName") != null && !jsonObj.get("customerFullName").isJsonNull()) && !jsonObj.get("customerFullName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerFullName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerFullName").toString()));
      }
      if ((jsonObj.get("createdOn") != null && !jsonObj.get("createdOn").isJsonNull()) && !jsonObj.get("createdOn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdOn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdOn").toString()));
      }
      if ((jsonObj.get("amount") != null && !jsonObj.get("amount").isJsonNull()) && !jsonObj.get("amount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amount").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) && !jsonObj.get("currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreditnoteListResponseResultsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreditnoteListResponseResultsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreditnoteListResponseResultsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreditnoteListResponseResultsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<CreditnoteListResponseResultsInner>() {
           @Override
           public void write(JsonWriter out, CreditnoteListResponseResultsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CreditnoteListResponseResultsInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             CreditnoteListResponseResultsInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CreditnoteListResponseResultsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CreditnoteListResponseResultsInner
  * @throws IOException if the JSON string is invalid with respect to CreditnoteListResponseResultsInner
  */
  public static CreditnoteListResponseResultsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreditnoteListResponseResultsInner.class);
  }

 /**
  * Convert an instance of CreditnoteListResponseResultsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

