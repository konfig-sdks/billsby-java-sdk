/*
 * Billsby API
 * Billsby is a feature-rich \"Saas\" recurring payment platform, ranked as the leading subscription billing software by G2.  Billsby is designed to ensure customers can go live quickly, often within 1-2 hours.  To help facilitate this process we have a team of friendly knowledgeable advisors ready to help your business go live.      Billsby specializes in providing great customer service at an affordable price point - our technology is rated No 1 on G2 by our customers.  If you are a developer creating a solution for your customer, Billsby has a friendly well-documented API.  The Billsby team are here to provide support to developers in order to ensure a smooth migration or new system build.   Why not book a call, talk through your Billing requirements and we can let you know how we can help you transform your business..
 *
 * The version of the OpenAPI document: 1.3.5
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * CustomerCreateWithoutSubscriptionRequestCardDetails
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class CustomerCreateWithoutSubscriptionRequestCardDetails {
  public static final String SERIALIZED_NAME_FULL_NAME = "fullName";
  @SerializedName(SERIALIZED_NAME_FULL_NAME)
  private String fullName;

  public static final String SERIALIZED_NAME_PAYMENT_CARD_TOKEN = "paymentCardToken";
  @SerializedName(SERIALIZED_NAME_PAYMENT_CARD_TOKEN)
  private String paymentCardToken;

  public static final String SERIALIZED_NAME_EXPIRY_MONTH = "expiryMonth";
  @SerializedName(SERIALIZED_NAME_EXPIRY_MONTH)
  private Integer expiryMonth;

  public static final String SERIALIZED_NAME_EXPIRY_YEAR = "expiryYear";
  @SerializedName(SERIALIZED_NAME_EXPIRY_YEAR)
  private Integer expiryYear;

  public static final String SERIALIZED_NAME_CARD_TYPE = "cardType";
  @SerializedName(SERIALIZED_NAME_CARD_TYPE)
  private String cardType;

  public static final String SERIALIZED_NAME_LAST4_DIGITS = "last4Digits";
  @SerializedName(SERIALIZED_NAME_LAST4_DIGITS)
  private String last4Digits;

  public CustomerCreateWithoutSubscriptionRequestCardDetails() {
  }

  public CustomerCreateWithoutSubscriptionRequestCardDetails fullName(String fullName) {
    
    
    
    
    this.fullName = fullName;
    return this;
  }

   /**
   * The full name of the customer
   * @return fullName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The full name of the customer")

  public String getFullName() {
    return fullName;
  }


  public void setFullName(String fullName) {
    
    
    
    this.fullName = fullName;
  }


  public CustomerCreateWithoutSubscriptionRequestCardDetails paymentCardToken(String paymentCardToken) {
    
    
    
    
    this.paymentCardToken = paymentCardToken;
    return this;
  }

   /**
   * This can be found in the create token API response
   * @return paymentCardToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This can be found in the create token API response")

  public String getPaymentCardToken() {
    return paymentCardToken;
  }


  public void setPaymentCardToken(String paymentCardToken) {
    
    
    
    this.paymentCardToken = paymentCardToken;
  }


  public CustomerCreateWithoutSubscriptionRequestCardDetails expiryMonth(Integer expiryMonth) {
    
    
    
    
    this.expiryMonth = expiryMonth;
    return this;
  }

   /**
   * Customers two digit expiry month - i.e. \&quot;12\&quot;
   * @return expiryMonth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Customers two digit expiry month - i.e. \"12\"")

  public Integer getExpiryMonth() {
    return expiryMonth;
  }


  public void setExpiryMonth(Integer expiryMonth) {
    
    
    
    this.expiryMonth = expiryMonth;
  }


  public CustomerCreateWithoutSubscriptionRequestCardDetails expiryYear(Integer expiryYear) {
    
    
    
    
    this.expiryYear = expiryYear;
    return this;
  }

   /**
   * Customers card expiry year - i.e. \&quot;2020\&quot;
   * @return expiryYear
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Customers card expiry year - i.e. \"2020\"")

  public Integer getExpiryYear() {
    return expiryYear;
  }


  public void setExpiryYear(Integer expiryYear) {
    
    
    
    this.expiryYear = expiryYear;
  }


  public CustomerCreateWithoutSubscriptionRequestCardDetails cardType(String cardType) {
    
    
    
    
    this.cardType = cardType;
    return this;
  }

   /**
   * \&quot;visa\&quot; \&quot;master\&quot; \&quot;american_express\&quot;
   * @return cardType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "\"visa\" \"master\" \"american_express\"")

  public String getCardType() {
    return cardType;
  }


  public void setCardType(String cardType) {
    
    
    
    this.cardType = cardType;
  }


  public CustomerCreateWithoutSubscriptionRequestCardDetails last4Digits(String last4Digits) {
    
    
    
    
    this.last4Digits = last4Digits;
    return this;
  }

   /**
   * The last 4 digits of the customers card
   * @return last4Digits
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The last 4 digits of the customers card")

  public String getLast4Digits() {
    return last4Digits;
  }


  public void setLast4Digits(String last4Digits) {
    
    
    
    this.last4Digits = last4Digits;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CustomerCreateWithoutSubscriptionRequestCardDetails instance itself
   */
  public CustomerCreateWithoutSubscriptionRequestCardDetails putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerCreateWithoutSubscriptionRequestCardDetails customerCreateWithoutSubscriptionRequestCardDetails = (CustomerCreateWithoutSubscriptionRequestCardDetails) o;
    return Objects.equals(this.fullName, customerCreateWithoutSubscriptionRequestCardDetails.fullName) &&
        Objects.equals(this.paymentCardToken, customerCreateWithoutSubscriptionRequestCardDetails.paymentCardToken) &&
        Objects.equals(this.expiryMonth, customerCreateWithoutSubscriptionRequestCardDetails.expiryMonth) &&
        Objects.equals(this.expiryYear, customerCreateWithoutSubscriptionRequestCardDetails.expiryYear) &&
        Objects.equals(this.cardType, customerCreateWithoutSubscriptionRequestCardDetails.cardType) &&
        Objects.equals(this.last4Digits, customerCreateWithoutSubscriptionRequestCardDetails.last4Digits)&&
        Objects.equals(this.additionalProperties, customerCreateWithoutSubscriptionRequestCardDetails.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fullName, paymentCardToken, expiryMonth, expiryYear, cardType, last4Digits, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerCreateWithoutSubscriptionRequestCardDetails {\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    paymentCardToken: ").append(toIndentedString(paymentCardToken)).append("\n");
    sb.append("    expiryMonth: ").append(toIndentedString(expiryMonth)).append("\n");
    sb.append("    expiryYear: ").append(toIndentedString(expiryYear)).append("\n");
    sb.append("    cardType: ").append(toIndentedString(cardType)).append("\n");
    sb.append("    last4Digits: ").append(toIndentedString(last4Digits)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("fullName");
    openapiFields.add("paymentCardToken");
    openapiFields.add("expiryMonth");
    openapiFields.add("expiryYear");
    openapiFields.add("cardType");
    openapiFields.add("last4Digits");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomerCreateWithoutSubscriptionRequestCardDetails
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CustomerCreateWithoutSubscriptionRequestCardDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomerCreateWithoutSubscriptionRequestCardDetails is not found in the empty JSON string", CustomerCreateWithoutSubscriptionRequestCardDetails.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("fullName") != null && !jsonObj.get("fullName").isJsonNull()) && !jsonObj.get("fullName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullName").toString()));
      }
      if ((jsonObj.get("paymentCardToken") != null && !jsonObj.get("paymentCardToken").isJsonNull()) && !jsonObj.get("paymentCardToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentCardToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentCardToken").toString()));
      }
      if ((jsonObj.get("cardType") != null && !jsonObj.get("cardType").isJsonNull()) && !jsonObj.get("cardType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cardType").toString()));
      }
      if ((jsonObj.get("last4Digits") != null && !jsonObj.get("last4Digits").isJsonNull()) && !jsonObj.get("last4Digits").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last4Digits` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last4Digits").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomerCreateWithoutSubscriptionRequestCardDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomerCreateWithoutSubscriptionRequestCardDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomerCreateWithoutSubscriptionRequestCardDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomerCreateWithoutSubscriptionRequestCardDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomerCreateWithoutSubscriptionRequestCardDetails>() {
           @Override
           public void write(JsonWriter out, CustomerCreateWithoutSubscriptionRequestCardDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomerCreateWithoutSubscriptionRequestCardDetails read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             CustomerCreateWithoutSubscriptionRequestCardDetails instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomerCreateWithoutSubscriptionRequestCardDetails given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomerCreateWithoutSubscriptionRequestCardDetails
  * @throws IOException if the JSON string is invalid with respect to CustomerCreateWithoutSubscriptionRequestCardDetails
  */
  public static CustomerCreateWithoutSubscriptionRequestCardDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomerCreateWithoutSubscriptionRequestCardDetails.class);
  }

 /**
  * Convert an instance of CustomerCreateWithoutSubscriptionRequestCardDetails to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

