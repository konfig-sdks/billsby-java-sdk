/*
 * Billsby API
 * Billsby is a feature-rich \"Saas\" recurring payment platform, ranked as the leading subscription billing software by G2.  Billsby is designed to ensure customers can go live quickly, often within 1-2 hours.  To help facilitate this process we have a team of friendly knowledgeable advisors ready to help your business go live.      Billsby specializes in providing great customer service at an affordable price point - our technology is rated No 1 on G2 by our customers.  If you are a developer creating a solution for your customer, Billsby has a friendly well-documented API.  The Billsby team are here to provide support to developers in order to ensure a smooth migration or new system build.   Why not book a call, talk through your Billing requirements and we can let you know how we can help you transform your business..
 *
 * The version of the OpenAPI document: 1.3.5
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AllowanceGetDetailsResponsePriceModelsInnerTiersInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * AllowanceGetDetailsResponsePriceModelsInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class AllowanceGetDetailsResponsePriceModelsInner {
  public static final String SERIALIZED_NAME_FREQUENCY = "frequency";
  @SerializedName(SERIALIZED_NAME_FREQUENCY)
  private Integer frequency = 0;

  public static final String SERIALIZED_NAME_FREQUENCY_TYPE = "frequencyType";
  @SerializedName(SERIALIZED_NAME_FREQUENCY_TYPE)
  private String frequencyType;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_INCLUDED_UNITS = "includedUnits";
  @SerializedName(SERIALIZED_NAME_INCLUDED_UNITS)
  private Integer includedUnits = 0;

  public static final String SERIALIZED_NAME_FLAT_FEE_PRICE = "flatFeePrice";
  @SerializedName(SERIALIZED_NAME_FLAT_FEE_PRICE)
  private Integer flatFeePrice = 0;

  public static final String SERIALIZED_NAME_FLAT_FEE_PRICE_FORMATTED = "flatFeePriceFormatted";
  @SerializedName(SERIALIZED_NAME_FLAT_FEE_PRICE_FORMATTED)
  private String flatFeePriceFormatted;

  public static final String SERIALIZED_NAME_PER_UNIT_PRICE = "perUnitPrice";
  @SerializedName(SERIALIZED_NAME_PER_UNIT_PRICE)
  private Integer perUnitPrice = 0;

  public static final String SERIALIZED_NAME_PER_UNIT_PRICE_FORMATTED = "perUnitPriceFormatted";
  @SerializedName(SERIALIZED_NAME_PER_UNIT_PRICE_FORMATTED)
  private String perUnitPriceFormatted;

  public static final String SERIALIZED_NAME_TIERS = "tiers";
  @SerializedName(SERIALIZED_NAME_TIERS)
  private List<AllowanceGetDetailsResponsePriceModelsInnerTiersInner> tiers = null;

  public AllowanceGetDetailsResponsePriceModelsInner() {
  }

  public AllowanceGetDetailsResponsePriceModelsInner frequency(Integer frequency) {
    
    
    
    
    this.frequency = frequency;
    return this;
  }

   /**
   * Get frequency
   * @return frequency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Integer getFrequency() {
    return frequency;
  }


  public void setFrequency(Integer frequency) {
    
    
    
    this.frequency = frequency;
  }


  public AllowanceGetDetailsResponsePriceModelsInner frequencyType(String frequencyType) {
    
    
    
    
    this.frequencyType = frequencyType;
    return this;
  }

   /**
   * Get frequencyType
   * @return frequencyType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getFrequencyType() {
    return frequencyType;
  }


  public void setFrequencyType(String frequencyType) {
    
    
    
    this.frequencyType = frequencyType;
  }


  public AllowanceGetDetailsResponsePriceModelsInner currency(String currency) {
    
    
    
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    
    
    
    this.currency = currency;
  }


  public AllowanceGetDetailsResponsePriceModelsInner includedUnits(Integer includedUnits) {
    
    
    
    
    this.includedUnits = includedUnits;
    return this;
  }

   /**
   * Get includedUnits
   * @return includedUnits
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Integer getIncludedUnits() {
    return includedUnits;
  }


  public void setIncludedUnits(Integer includedUnits) {
    
    
    
    this.includedUnits = includedUnits;
  }


  public AllowanceGetDetailsResponsePriceModelsInner flatFeePrice(Integer flatFeePrice) {
    
    
    
    
    this.flatFeePrice = flatFeePrice;
    return this;
  }

   /**
   * Get flatFeePrice
   * @return flatFeePrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Integer getFlatFeePrice() {
    return flatFeePrice;
  }


  public void setFlatFeePrice(Integer flatFeePrice) {
    
    
    
    this.flatFeePrice = flatFeePrice;
  }


  public AllowanceGetDetailsResponsePriceModelsInner flatFeePriceFormatted(String flatFeePriceFormatted) {
    
    
    
    
    this.flatFeePriceFormatted = flatFeePriceFormatted;
    return this;
  }

   /**
   * Get flatFeePriceFormatted
   * @return flatFeePriceFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getFlatFeePriceFormatted() {
    return flatFeePriceFormatted;
  }


  public void setFlatFeePriceFormatted(String flatFeePriceFormatted) {
    
    
    
    this.flatFeePriceFormatted = flatFeePriceFormatted;
  }


  public AllowanceGetDetailsResponsePriceModelsInner perUnitPrice(Integer perUnitPrice) {
    
    
    
    
    this.perUnitPrice = perUnitPrice;
    return this;
  }

   /**
   * Get perUnitPrice
   * @return perUnitPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Integer getPerUnitPrice() {
    return perUnitPrice;
  }


  public void setPerUnitPrice(Integer perUnitPrice) {
    
    
    
    this.perUnitPrice = perUnitPrice;
  }


  public AllowanceGetDetailsResponsePriceModelsInner perUnitPriceFormatted(String perUnitPriceFormatted) {
    
    
    
    
    this.perUnitPriceFormatted = perUnitPriceFormatted;
    return this;
  }

   /**
   * Get perUnitPriceFormatted
   * @return perUnitPriceFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "string", value = "")

  public String getPerUnitPriceFormatted() {
    return perUnitPriceFormatted;
  }


  public void setPerUnitPriceFormatted(String perUnitPriceFormatted) {
    
    
    
    this.perUnitPriceFormatted = perUnitPriceFormatted;
  }


  public AllowanceGetDetailsResponsePriceModelsInner tiers(List<AllowanceGetDetailsResponsePriceModelsInnerTiersInner> tiers) {
    
    
    
    
    this.tiers = tiers;
    return this;
  }

  public AllowanceGetDetailsResponsePriceModelsInner addTiersItem(AllowanceGetDetailsResponsePriceModelsInnerTiersInner tiersItem) {
    if (this.tiers == null) {
      this.tiers = new ArrayList<>();
    }
    this.tiers.add(tiersItem);
    return this;
  }

   /**
   * Get tiers
   * @return tiers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AllowanceGetDetailsResponsePriceModelsInnerTiersInner> getTiers() {
    return tiers;
  }


  public void setTiers(List<AllowanceGetDetailsResponsePriceModelsInnerTiersInner> tiers) {
    
    
    
    this.tiers = tiers;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AllowanceGetDetailsResponsePriceModelsInner instance itself
   */
  public AllowanceGetDetailsResponsePriceModelsInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AllowanceGetDetailsResponsePriceModelsInner allowanceGetDetailsResponsePriceModelsInner = (AllowanceGetDetailsResponsePriceModelsInner) o;
    return Objects.equals(this.frequency, allowanceGetDetailsResponsePriceModelsInner.frequency) &&
        Objects.equals(this.frequencyType, allowanceGetDetailsResponsePriceModelsInner.frequencyType) &&
        Objects.equals(this.currency, allowanceGetDetailsResponsePriceModelsInner.currency) &&
        Objects.equals(this.includedUnits, allowanceGetDetailsResponsePriceModelsInner.includedUnits) &&
        Objects.equals(this.flatFeePrice, allowanceGetDetailsResponsePriceModelsInner.flatFeePrice) &&
        Objects.equals(this.flatFeePriceFormatted, allowanceGetDetailsResponsePriceModelsInner.flatFeePriceFormatted) &&
        Objects.equals(this.perUnitPrice, allowanceGetDetailsResponsePriceModelsInner.perUnitPrice) &&
        Objects.equals(this.perUnitPriceFormatted, allowanceGetDetailsResponsePriceModelsInner.perUnitPriceFormatted) &&
        Objects.equals(this.tiers, allowanceGetDetailsResponsePriceModelsInner.tiers)&&
        Objects.equals(this.additionalProperties, allowanceGetDetailsResponsePriceModelsInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(frequency, frequencyType, currency, includedUnits, flatFeePrice, flatFeePriceFormatted, perUnitPrice, perUnitPriceFormatted, tiers, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AllowanceGetDetailsResponsePriceModelsInner {\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("    frequencyType: ").append(toIndentedString(frequencyType)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    includedUnits: ").append(toIndentedString(includedUnits)).append("\n");
    sb.append("    flatFeePrice: ").append(toIndentedString(flatFeePrice)).append("\n");
    sb.append("    flatFeePriceFormatted: ").append(toIndentedString(flatFeePriceFormatted)).append("\n");
    sb.append("    perUnitPrice: ").append(toIndentedString(perUnitPrice)).append("\n");
    sb.append("    perUnitPriceFormatted: ").append(toIndentedString(perUnitPriceFormatted)).append("\n");
    sb.append("    tiers: ").append(toIndentedString(tiers)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("frequency");
    openapiFields.add("frequencyType");
    openapiFields.add("currency");
    openapiFields.add("includedUnits");
    openapiFields.add("flatFeePrice");
    openapiFields.add("flatFeePriceFormatted");
    openapiFields.add("perUnitPrice");
    openapiFields.add("perUnitPriceFormatted");
    openapiFields.add("tiers");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AllowanceGetDetailsResponsePriceModelsInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!AllowanceGetDetailsResponsePriceModelsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AllowanceGetDetailsResponsePriceModelsInner is not found in the empty JSON string", AllowanceGetDetailsResponsePriceModelsInner.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("frequencyType") != null && !jsonObj.get("frequencyType").isJsonNull()) && !jsonObj.get("frequencyType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `frequencyType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("frequencyType").toString()));
      }
      if ((jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) && !jsonObj.get("currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
      if ((jsonObj.get("flatFeePriceFormatted") != null && !jsonObj.get("flatFeePriceFormatted").isJsonNull()) && !jsonObj.get("flatFeePriceFormatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flatFeePriceFormatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flatFeePriceFormatted").toString()));
      }
      if ((jsonObj.get("perUnitPriceFormatted") != null && !jsonObj.get("perUnitPriceFormatted").isJsonNull()) && !jsonObj.get("perUnitPriceFormatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `perUnitPriceFormatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("perUnitPriceFormatted").toString()));
      }
      if (jsonObj.get("tiers") != null && !jsonObj.get("tiers").isJsonNull()) {
        JsonArray jsonArraytiers = jsonObj.getAsJsonArray("tiers");
        if (jsonArraytiers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("tiers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `tiers` to be an array in the JSON string but got `%s`", jsonObj.get("tiers").toString()));
          }

          // validate the optional field `tiers` (array)
          for (int i = 0; i < jsonArraytiers.size(); i++) {
            AllowanceGetDetailsResponsePriceModelsInnerTiersInner.validateJsonObject(jsonArraytiers.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AllowanceGetDetailsResponsePriceModelsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AllowanceGetDetailsResponsePriceModelsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AllowanceGetDetailsResponsePriceModelsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AllowanceGetDetailsResponsePriceModelsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<AllowanceGetDetailsResponsePriceModelsInner>() {
           @Override
           public void write(JsonWriter out, AllowanceGetDetailsResponsePriceModelsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AllowanceGetDetailsResponsePriceModelsInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AllowanceGetDetailsResponsePriceModelsInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AllowanceGetDetailsResponsePriceModelsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AllowanceGetDetailsResponsePriceModelsInner
  * @throws IOException if the JSON string is invalid with respect to AllowanceGetDetailsResponsePriceModelsInner
  */
  public static AllowanceGetDetailsResponsePriceModelsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AllowanceGetDetailsResponsePriceModelsInner.class);
  }

 /**
  * Convert an instance of AllowanceGetDetailsResponsePriceModelsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

